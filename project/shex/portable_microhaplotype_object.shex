# metamodel_version: 1.7.0
BASE <https://plasmogenepi.github.io/portable-microhaplotype-object/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX linkml: <https://w3id.org/linkml/>


linkml:String xsd:string

linkml:Integer xsd:integer

linkml:Boolean xsd:boolean

linkml:Float xsd:float

linkml:Double xsd:double

linkml:Decimal xsd:decimal

linkml:Time xsd:time

linkml:Date xsd:date

linkml:Datetime xsd:dateTime

linkml:DateOrDatetime linkml:DateOrDatetime

linkml:Uriorcurie IRI

linkml:Curie xsd:string

linkml:Uri IRI

linkml:Ncname xsd:string

linkml:Objectidentifier IRI

linkml:Nodeidentifier NONLITERAL

linkml:Jsonpointer xsd:string

linkml:Jsonpath xsd:string

linkml:Sparqlpath xsd:string

<BioMethod> CLOSED {
    (  $<BioMethod_tes> (  <program> @linkml:String ;
          <purpose> @linkml:String ;
          <program_version> @linkml:String ;
          <additional_argument> @linkml:String *
       ) ;
       rdf:type [ <BioMethod> ] ?
    )
}

<DemultiplexedSamples> CLOSED {
    (  $<DemultiplexedSamples_tes> <demultiplexed_samples> @<DemultiplexedTargetsForSample> + ;
       rdf:type [ <DemultiplexedSamples> ] ?
    )
}

<DemultiplexedTargetForSample> CLOSED {
    (  $<DemultiplexedTargetForSample_tes> (  <target_id> @linkml:String ;
          <raw_read_count> @linkml:Double
       ) ;
       rdf:type [ <DemultiplexedTargetForSample> ] ?
    )
}

<DemultiplexedTargetsForSample> CLOSED {
    (  $<DemultiplexedTargetsForSample_tes> (  <experiment_id> @linkml:String ;
          <demultiplexed_targets> @<DemultiplexedTargetForSample> +
       ) ;
       rdf:type [ <DemultiplexedTargetsForSample> ] ?
    )
}

<ExperimentInfo> CLOSED {
    (  $<ExperimentInfo_tes> (  <sequencing_info_id> @linkml:String ;
          <plate_name> @linkml:String ;
          <plate_row> @linkml:String ;
          <plate_col> @linkml:String ;
          <specimen_id> @linkml:String ;
          <panel_id> @linkml:String
       ) ;
       rdf:type [ <ExperimentInfo> ]
    )
}

<GenomeInfo> CLOSED {
    (  $<GenomeInfo_tes> (  <name> @linkml:String ;
          <version> @linkml:String ;
          <taxon_id> @linkml:Integer ;
          <url> @linkml:String ;
          <gff_url> @linkml:String ?
       ) ;
       rdf:type [ <GenomeInfo> ] ?
    )
}

<GenomicLocation> CLOSED {
    (  $<GenomicLocation_tes> (  <chrom> @linkml:String ;
          <start> @linkml:Integer ;
          <end> @linkml:Integer ;
          <strand> @linkml:String ?
       ) ;
       rdf:type [ <GenomicLocation> ] ?
    )
}

<MicrohaplotypeForTarget> CLOSED {
    (  $<MicrohaplotypeForTarget_tes> (  <microhaplotype_id> @linkml:String ;
          <read_count> @linkml:Double ;
          <umi_count> @linkml:Double ?
       ) ;
       rdf:type [ <MicrohaplotypeForTarget> ] ?
    )
}

<MicrohaplotypesDetected> CLOSED {
    (  $<MicrohaplotypesDetected_tes> (  <sequencing_id> @linkml:String ;
          <bioinformatics_id> @linkml:String ;
          <samples> @<MicrohaplotypesForSample> +
       ) ;
       rdf:type [ <MicrohaplotypesDetected> ] ?
    )
}

<MicrohaplotypesForSample> CLOSED {
    (  $<MicrohaplotypesForSample_tes> (  <experiment_id> @linkml:String ;
          <target_results> @<MicrohaplotypesForTarget> +
       ) ;
       rdf:type [ <MicrohaplotypesForSample> ] ?
    )
}

<MicrohaplotypesForTarget> CLOSED {
    (  $<MicrohaplotypesForTarget_tes> (  <target_id> @linkml:String ;
          <microhaplotypes> @<MicrohaplotypeForTarget> +
       ) ;
       rdf:type [ <MicrohaplotypesForTarget> ] ?
    )
}

<PanelInfo> CLOSED {
    (  $<PanelInfo_tes> (  <panel_id> @linkml:String ;
          <target_genome> @<GenomeInfo> ;
          <targets> @<TargetInfo> +
       ) ;
       rdf:type [ <PanelInfo> ] ?
    )
}

<PortableMicrohaplotypeObject> CLOSED {
    (  $<PortableMicrohaplotypeObject_tes> (  <experiment_infos> @<ExperimentInfo> + ;
          <specimen_infos> @<SpecimenInfo> + ;
          <sequencing_info> @<SequencingInfo> ;
          <bioinformatics_info> @<TarAmpBioinformaticsInfo> ;
          <panel_info> @<PanelInfo> ;
          <representative_microhaplotype_sequences> @<RepresentativeMicrohaplotypeSequences> + ;
          <microhaplotypes_detected> @<MicrohaplotypesDetected> ;
          <target_demultiplexed_samples> @<DemultiplexedSamples>
       ) ;
       rdf:type [ <PortableMicrohaplotypeObject> ] ?
    )
}

<PrimerInfo> CLOSED {
    (  $<PrimerInfo_tes> (  <seq> @linkml:String ;
          <location> @<GenomicLocation>
       ) ;
       rdf:type [ <PrimerInfo> ] ?
    )
}

<Primers> CLOSED {
    (  $<Primers_tes> <entries> @<PrimerInfo> * ;
       rdf:type [ <Primers> ] ?
    )
}

<RepresentativeMicrohaplotypeSequence> CLOSED {
    (  $<RepresentativeMicrohaplotypeSequence_tes> (  <seq> @linkml:String ;
          <microhaplotype_id> @linkml:String ;
          <quality> @linkml:String ? ;
          <alt_annotations> @linkml:String *
       ) ;
       rdf:type [ <RepresentativeMicrohaplotypeSequence> ] ?
    )
}

<RepresentativeMicrohaplotypeSequences> CLOSED {
    (  $<RepresentativeMicrohaplotypeSequences_tes> (  <target_id> @linkml:String ;
          <seqs> @<RepresentativeMicrohaplotypeSequence> +
       ) ;
       rdf:type [ <RepresentativeMicrohaplotypeSequences> ] ?
    )
}

<SequencingInfo> CLOSED {
    (  $<SequencingInfo_tes> (  <seq_instrument> @linkml:String ;
          <seq_date> @linkml:String ;
          <nucl_acid_ext> @linkml:String ;
          <nucl_acid_amp> @linkml:String ;
          <nucl_acid_ext_date> @linkml:String ;
          <nucl_acid_amp_date> @linkml:String ;
          <pcr_cond> @linkml:String ;
          <lib_screen> @linkml:String ;
          <lib_layout> @linkml:String ;
          <lib_kit> @linkml:String ;
          <seq_center> @linkml:String
       ) ;
       rdf:type [ <SequencingInfo> ]
    )
}

<SpecimenInfo> CLOSED {
    (  $<SpecimenInfo_tes> (  <plate_name> @linkml:String ;
          <plate_row> @linkml:String ;
          <plate_col> @linkml:String ;
          <samp_taxon_id> @linkml:Integer ;
          <individual_id> @linkml:String ? ;
          <host_taxon_id> @linkml:Integer ? ;
          <alternate_identifiers> @linkml:String * ;
          <parasite_density> @linkml:Integer ? ;
          <collection_date> @linkml:String ;
          <lat_lon> @linkml:String ;
          <geo_loc_name> @linkml:String ;
          <collector> @linkml:String ;
          <samp_store_loc> @linkml:String ;
          <samp_collect_device> @linkml:String ;
          <project_name> @linkml:String ;
          <accession> @linkml:String ? ;
          <sample_comments> @linkml:String ?
       ) ;
       rdf:type [ <SpecimenInfo> ]
    )
}

<TarAmpBioinformaticsInfo> CLOSED {
    (  $<TarAmpBioinformaticsInfo_tes> (  <demultiplexing_method> @<BioMethod> ;
          <denoising_method> @<BioMethod> ;
          <population_clustering_method> @<BioMethod> ;
          <additional_methods> @<BioMethod> *
       ) ;
       rdf:type [ <TarAmpBioinformaticsInfo> ]
    )
}

<TargetInfo> CLOSED {
    (  $<TargetInfo_tes> (  <target_id> @linkml:String ;
          <gene_id> @linkml:String ? ;
          <insert_location> @<GenomicLocation> ;
          <forward_primers> @<Primers> ;
          <reverse_primers> @<Primers>
       ) ;
       rdf:type [ <TargetInfo> ] ?
    )
}

