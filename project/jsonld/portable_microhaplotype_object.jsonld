{
  "name": "portable-microhaplotype-object",
  "description": "A schema to define the minimum amount of data needed to export a microhaplotype calling pipeline analysis with associated metadata",
  "title": "portable-microhaplotype-object",
  "see_also": [
    "https://PlasmoGenEpi.github.io/portable-microhaplotype-object"
  ],
  "id": "https://plasmogenepi.github.io/portable-microhaplotype-object",
  "imports": [
    "linkml:types"
  ],
  "license": "GNU GPL v3.0",
  "prefixes": [
    {
      "prefix_prefix": "portable_microhaplotype_object",
      "prefix_reference": "https://plasmogenepi.github.io/portable-microhaplotype-object/"
    },
    {
      "prefix_prefix": "linkml",
      "prefix_reference": "https://w3id.org/linkml/"
    },
    {
      "prefix_prefix": "biolink",
      "prefix_reference": "https://w3id.org/biolink/"
    },
    {
      "prefix_prefix": "schema",
      "prefix_reference": "http://schema.org/"
    },
    {
      "prefix_prefix": "PATO",
      "prefix_reference": "http://purl.obolibrary.org/obo/PATO_"
    },
    {
      "prefix_prefix": "example",
      "prefix_reference": "https://example.org/"
    }
  ],
  "default_prefix": "portable_microhaplotype_object",
  "default_range": "string",
  "types": [
    {
      "name": "string",
      "definition_uri": "https://w3id.org/linkml/String",
      "description": "A character string",
      "notes": [
        "In RDF serializations, a slot with range of string is treated as a literal or type xsd:string.   If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"string\"."
      ],
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "exact_mappings": [
        "schema:Text"
      ],
      "base": "str",
      "uri": "http://www.w3.org/2001/XMLSchema#string",
      "@type": "TypeDefinition"
    },
    {
      "name": "integer",
      "definition_uri": "https://w3id.org/linkml/Integer",
      "description": "An integer",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"integer\"."
      ],
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "exact_mappings": [
        "schema:Integer"
      ],
      "base": "int",
      "uri": "http://www.w3.org/2001/XMLSchema#integer",
      "@type": "TypeDefinition"
    },
    {
      "name": "boolean",
      "definition_uri": "https://w3id.org/linkml/Boolean",
      "description": "A binary (true or false) value",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"boolean\"."
      ],
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "exact_mappings": [
        "schema:Boolean"
      ],
      "base": "Bool",
      "uri": "http://www.w3.org/2001/XMLSchema#boolean",
      "repr": "bool",
      "@type": "TypeDefinition"
    },
    {
      "name": "float",
      "definition_uri": "https://w3id.org/linkml/Float",
      "description": "A real number that conforms to the xsd:float specification",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"float\"."
      ],
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "exact_mappings": [
        "schema:Float"
      ],
      "base": "float",
      "uri": "http://www.w3.org/2001/XMLSchema#float",
      "@type": "TypeDefinition"
    },
    {
      "name": "double",
      "definition_uri": "https://w3id.org/linkml/Double",
      "description": "A real number that conforms to the xsd:double specification",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"double\"."
      ],
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "close_mappings": [
        "schema:Float"
      ],
      "base": "float",
      "uri": "http://www.w3.org/2001/XMLSchema#double",
      "@type": "TypeDefinition"
    },
    {
      "name": "decimal",
      "definition_uri": "https://w3id.org/linkml/Decimal",
      "description": "A real number with arbitrary precision that conforms to the xsd:decimal specification",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"decimal\"."
      ],
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "broad_mappings": [
        "schema:Number"
      ],
      "base": "Decimal",
      "uri": "http://www.w3.org/2001/XMLSchema#decimal",
      "@type": "TypeDefinition"
    },
    {
      "name": "time",
      "definition_uri": "https://w3id.org/linkml/Time",
      "description": "A time object represents a (local) time of day, independent of any particular day",
      "notes": [
        "URI is dateTime because OWL reasoners do not work with straight date or time",
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"time\"."
      ],
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "exact_mappings": [
        "schema:Time"
      ],
      "base": "XSDTime",
      "uri": "http://www.w3.org/2001/XMLSchema#time",
      "repr": "str",
      "@type": "TypeDefinition"
    },
    {
      "name": "date",
      "definition_uri": "https://w3id.org/linkml/Date",
      "description": "a date (year, month and day) in an idealized calendar",
      "notes": [
        "URI is dateTime because OWL reasoners don't work with straight date or time",
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"date\"."
      ],
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "exact_mappings": [
        "schema:Date"
      ],
      "base": "XSDDate",
      "uri": "http://www.w3.org/2001/XMLSchema#date",
      "repr": "str",
      "@type": "TypeDefinition"
    },
    {
      "name": "datetime",
      "definition_uri": "https://w3id.org/linkml/Datetime",
      "description": "The combination of a date and time",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"datetime\"."
      ],
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "exact_mappings": [
        "schema:DateTime"
      ],
      "base": "XSDDateTime",
      "uri": "http://www.w3.org/2001/XMLSchema#dateTime",
      "repr": "str",
      "@type": "TypeDefinition"
    },
    {
      "name": "date_or_datetime",
      "definition_uri": "https://w3id.org/linkml/DateOrDatetime",
      "description": "Either a date or a datetime",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"date_or_datetime\"."
      ],
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "base": "str",
      "uri": "https://w3id.org/linkml/DateOrDatetime",
      "repr": "str",
      "@type": "TypeDefinition"
    },
    {
      "name": "uriorcurie",
      "definition_uri": "https://w3id.org/linkml/Uriorcurie",
      "description": "a URI or a CURIE",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"uriorcurie\"."
      ],
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "base": "URIorCURIE",
      "uri": "http://www.w3.org/2001/XMLSchema#anyURI",
      "repr": "str",
      "@type": "TypeDefinition"
    },
    {
      "name": "curie",
      "definition_uri": "https://w3id.org/linkml/Curie",
      "conforms_to": "https://www.w3.org/TR/curie/",
      "description": "a compact URI",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"curie\"."
      ],
      "comments": [
        "in RDF serializations this MUST be expanded to a URI",
        "in non-RDF serializations MAY be serialized as the compact representation"
      ],
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "base": "Curie",
      "uri": "http://www.w3.org/2001/XMLSchema#string",
      "repr": "str",
      "@type": "TypeDefinition"
    },
    {
      "name": "uri",
      "definition_uri": "https://w3id.org/linkml/Uri",
      "conforms_to": "https://www.ietf.org/rfc/rfc3987.txt",
      "description": "a complete URI",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"uri\"."
      ],
      "comments": [
        "in RDF serializations a slot with range of uri is treated as a literal or type xsd:anyURI unless it is an identifier or a reference to an identifier, in which case it is translated directly to a node"
      ],
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "close_mappings": [
        "schema:URL"
      ],
      "base": "URI",
      "uri": "http://www.w3.org/2001/XMLSchema#anyURI",
      "repr": "str",
      "@type": "TypeDefinition"
    },
    {
      "name": "ncname",
      "definition_uri": "https://w3id.org/linkml/Ncname",
      "description": "Prefix part of CURIE",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"ncname\"."
      ],
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "base": "NCName",
      "uri": "http://www.w3.org/2001/XMLSchema#string",
      "repr": "str",
      "@type": "TypeDefinition"
    },
    {
      "name": "objectidentifier",
      "definition_uri": "https://w3id.org/linkml/Objectidentifier",
      "description": "A URI or CURIE that represents an object in the model.",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"objectidentifier\"."
      ],
      "comments": [
        "Used for inheritance and type checking"
      ],
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "base": "ElementIdentifier",
      "uri": "http://www.w3.org/ns/shex#iri",
      "repr": "str",
      "@type": "TypeDefinition"
    },
    {
      "name": "nodeidentifier",
      "definition_uri": "https://w3id.org/linkml/Nodeidentifier",
      "description": "A URI, CURIE or BNODE that represents a node in a model.",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"nodeidentifier\"."
      ],
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "base": "NodeIdentifier",
      "uri": "http://www.w3.org/ns/shex#nonLiteral",
      "repr": "str",
      "@type": "TypeDefinition"
    },
    {
      "name": "jsonpointer",
      "definition_uri": "https://w3id.org/linkml/Jsonpointer",
      "conforms_to": "https://datatracker.ietf.org/doc/html/rfc6901",
      "description": "A string encoding a JSON Pointer. The value of the string MUST conform to JSON Point syntax and SHOULD dereference to a valid object within the current instance document when encoded in tree form.",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"jsonpointer\"."
      ],
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "base": "str",
      "uri": "http://www.w3.org/2001/XMLSchema#string",
      "repr": "str",
      "@type": "TypeDefinition"
    },
    {
      "name": "jsonpath",
      "definition_uri": "https://w3id.org/linkml/Jsonpath",
      "conforms_to": "https://www.ietf.org/archive/id/draft-goessner-dispatch-jsonpath-00.html",
      "description": "A string encoding a JSON Path. The value of the string MUST conform to JSON Point syntax and SHOULD dereference to zero or more valid objects within the current instance document when encoded in tree form.",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"jsonpath\"."
      ],
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "base": "str",
      "uri": "http://www.w3.org/2001/XMLSchema#string",
      "repr": "str",
      "@type": "TypeDefinition"
    },
    {
      "name": "sparqlpath",
      "definition_uri": "https://w3id.org/linkml/Sparqlpath",
      "conforms_to": "https://www.w3.org/TR/sparql11-query/#propertypaths",
      "description": "A string encoding a SPARQL Property Path. The value of the string MUST conform to SPARQL syntax and SHOULD dereference to zero or more valid objects within the current instance document when encoded as RDF.",
      "notes": [
        "If you are authoring schemas in LinkML YAML, the type is referenced with the lower case \"sparqlpath\"."
      ],
      "from_schema": "https://w3id.org/linkml/types",
      "imported_from": "linkml:types",
      "base": "str",
      "uri": "http://www.w3.org/2001/XMLSchema#string",
      "repr": "str",
      "@type": "TypeDefinition"
    }
  ],
  "slots": [
    {
      "name": "experiment_sample_id",
      "definition_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/experiment_sample_id",
      "description": "the index into the experiment_info list",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/experiment_sample_id",
      "owner": "ReadCountsByStageForExperimentalSample",
      "domain_of": [
        "MicrohaplotypesForSample",
        "ReadCountsByStageForExperimentalSample"
      ],
      "range": "integer",
      "required": true,
      "pattern": "^[0-9]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "specimen_id",
      "definition_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/specimen_id",
      "description": "the index into the specimen_info list",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/specimen_id",
      "owner": "ExperimentInfo",
      "domain_of": [
        "ExperimentInfo"
      ],
      "range": "integer",
      "required": true,
      "pattern": "^[0-9]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "sequencing_info_id",
      "definition_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/sequencing_info_id",
      "description": "the index into the sequencing_info list",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/sequencing_info_id",
      "owner": "ExperimentInfo",
      "domain_of": [
        "ExperimentInfo"
      ],
      "range": "integer",
      "required": true,
      "pattern": "^[0-9]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "target_id",
      "definition_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/target_id",
      "description": "the index into the target_info list",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/target_id",
      "owner": "ReadCountsByStageForTarget",
      "domain_of": [
        "RepresentativeMicrohaplotypesForTarget",
        "ReadCountsByStageForTarget"
      ],
      "range": "integer",
      "required": true,
      "pattern": "^[0-9]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "panel_id",
      "definition_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/panel_id",
      "description": "the index into the panel_info list",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/panel_id",
      "owner": "ExperimentInfo",
      "domain_of": [
        "ExperimentInfo"
      ],
      "range": "integer",
      "required": true,
      "pattern": "^[0-9]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "mhaps_target_id",
      "definition_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/mhaps_target_id",
      "description": "the index for a target in the microhaplotypes_info list",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/mhaps_target_id",
      "owner": "MicrohaplotypesForTarget",
      "domain_of": [
        "MicrohaplotypesForTarget"
      ],
      "range": "integer",
      "required": true,
      "pattern": "^[0-9]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "mhap_id",
      "definition_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/mhap_id",
      "description": "the index for a microhaplotype for a target in the microhaplotypes_info list, e.g. microhaplotypes_info[mhaps_target_id][mhap_id]",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/mhap_id",
      "owner": "MicrohaplotypeForTarget",
      "domain_of": [
        "MicrohaplotypeForTarget"
      ],
      "range": "integer",
      "required": true,
      "pattern": "^[0-9]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "bioinformatics_methods_id",
      "definition_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/bioinformatics_methods_id",
      "description": "the index into the bioinformatics_methods_info list",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/bioinformatics_methods_id",
      "owner": "BioinformaticsRunInfo",
      "domain_of": [
        "BioinformaticsRunInfo"
      ],
      "range": "integer",
      "required": true,
      "pattern": "^[0-9]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "bioinformatics_run_id",
      "definition_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/bioinformatics_run_id",
      "description": "the index into bioinformatics_run_info list",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/bioinformatics_run_id",
      "owner": "ReadCountsByStage",
      "domain_of": [
        "MicrohaplotypesDetected",
        "ReadCountsByStage"
      ],
      "range": "integer",
      "required": true,
      "pattern": "^[0-9]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "genome_id",
      "definition_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/genome_id",
      "description": "the index to the genome in the targeted_genomes list that this location refers to ",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/genome_id",
      "owner": "GenomicLocation",
      "domain_of": [
        "GenomicLocation"
      ],
      "range": "integer",
      "required": true,
      "pattern": "^[0-9]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "plate_name",
      "definition_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/plate_name",
      "description": "a name of plate the specimen was in",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/plate_name",
      "owner": "SpecimenInfo",
      "domain_of": [
        "ExperimentInfo",
        "SpecimenInfo"
      ],
      "range": "string",
      "pattern": "^[A-z-._0-9 ]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "plate_row",
      "definition_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/plate_row",
      "description": "the row the specimen was in",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/plate_row",
      "owner": "SpecimenInfo",
      "domain_of": [
        "ExperimentInfo",
        "SpecimenInfo"
      ],
      "range": "string",
      "pattern": "^[A-z]$",
      "@type": "SlotDefinition"
    },
    {
      "name": "plate_col",
      "definition_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/plate_col",
      "description": "the column the specimen was in",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/plate_col",
      "owner": "SpecimenInfo",
      "domain_of": [
        "ExperimentInfo",
        "SpecimenInfo"
      ],
      "range": "integer",
      "pattern": "^[0-9]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "seq",
      "definition_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/seq",
      "description": "the DNA sequence",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/seq",
      "owner": "PrimerInfo",
      "domain_of": [
        "RepresentativeMicrohaplotype",
        "PrimerInfo"
      ],
      "range": "string",
      "required": true,
      "pattern": "^[A-z]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "program_version",
      "definition_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/program_version",
      "description": "the version of generation method, should be in the format of v[MAJOR].[MINOR].[PATCH]",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/program_version",
      "owner": "PmoGenerationMethod",
      "domain_of": [
        "BioMethod",
        "PmoGenerationMethod"
      ],
      "range": "string",
      "required": true,
      "pattern": "^[A-z-._0-9 ]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "markerOfInterest__marker_location",
      "description": "the genomic location",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/marker_location",
      "alias": "marker_location",
      "owner": "MarkerOfInterest",
      "domain_of": [
        "MarkerOfInterest"
      ],
      "range": "GenomicLocation",
      "inlined": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "markerOfInterest__associations",
      "description": "a list of associations with this marker, e.g. SP resistance, etc",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/associations",
      "alias": "associations",
      "owner": "MarkerOfInterest",
      "domain_of": [
        "MarkerOfInterest"
      ],
      "range": "string",
      "multivalued": true,
      "pattern": "^[A-z-._0-9]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "targetInfo__target_name",
      "description": "an identifier for this target",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/target_name",
      "alias": "target_name",
      "owner": "TargetInfo",
      "domain_of": [
        "TargetInfo"
      ],
      "range": "string",
      "required": true,
      "pattern": "^[A-z-._0-9]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "targetInfo__gene_name",
      "description": "an identifier of the gene, if any, is being covered with this targeted",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/gene_name",
      "alias": "gene_name",
      "owner": "TargetInfo",
      "domain_of": [
        "TargetInfo"
      ],
      "range": "string",
      "pattern": "^[A-z-._0-9]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "targetInfo__insert_location",
      "description": "the intended genomic location of the insert of the amplicon (the location between the end of the forward primer and the beginning of the reverse primer)",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/insert_location",
      "alias": "insert_location",
      "owner": "TargetInfo",
      "domain_of": [
        "TargetInfo"
      ],
      "range": "GenomicLocation",
      "inlined": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "targetInfo__forward_primers",
      "description": "A list of forward primers associated with this target",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/forward_primers",
      "alias": "forward_primers",
      "owner": "TargetInfo",
      "domain_of": [
        "TargetInfo"
      ],
      "range": "PrimerInfo",
      "required": true,
      "multivalued": true,
      "inlined": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "targetInfo__reverse_primers",
      "description": "A list of reverse primers associated with this target",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/reverse_primers",
      "alias": "reverse_primers",
      "owner": "TargetInfo",
      "domain_of": [
        "TargetInfo"
      ],
      "range": "PrimerInfo",
      "required": true,
      "multivalued": true,
      "inlined": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "targetInfo__target_attributes",
      "description": "a list of classification type for the primer target",
      "examples": [
        {
          "value": "Diversity",
          "@type": "Example"
        },
        {
          "value": "Drug_Resistance",
          "@type": "Example"
        },
        {
          "value": "Diagnostics",
          "@type": "Example"
        }
      ],
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/target_attributes",
      "alias": "target_attributes",
      "owner": "TargetInfo",
      "domain_of": [
        "TargetInfo"
      ],
      "range": "string",
      "multivalued": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "reactionInfo__panel_targets",
      "description": "a list of the target indexes in the target_info list",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/panel_targets",
      "alias": "panel_targets",
      "owner": "ReactionInfo",
      "domain_of": [
        "ReactionInfo"
      ],
      "range": "integer",
      "required": true,
      "multivalued": true,
      "inlined_as_list": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "reactionInfo__reaction_name",
      "description": "a name for this reaction",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/reaction_name",
      "alias": "reaction_name",
      "owner": "ReactionInfo",
      "domain_of": [
        "ReactionInfo"
      ],
      "range": "string",
      "required": true,
      "pattern": "^[A-z-._0-9]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "panelInfo__reactions",
      "description": "a list of 1 or more reactions that this panel contains, each reactions list the targets that were amplified in that reaction, e.g. pool1, pool2",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/reactions",
      "alias": "reactions",
      "owner": "PanelInfo",
      "domain_of": [
        "PanelInfo"
      ],
      "range": "ReactionInfo",
      "required": true,
      "multivalued": true,
      "inlined": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "panelInfo__panel_name",
      "description": "a name for the panel",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/panel_name",
      "alias": "panel_name",
      "owner": "PanelInfo",
      "domain_of": [
        "PanelInfo"
      ],
      "range": "string",
      "required": true,
      "pattern": "^[A-z-._0-9]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "representativeMicrohaplotype__microhaplotype_name",
      "description": "an optional name for this microhaplotype",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/microhaplotype_name",
      "alias": "microhaplotype_name",
      "owner": "RepresentativeMicrohaplotype",
      "domain_of": [
        "RepresentativeMicrohaplotype"
      ],
      "range": "string",
      "pattern": "^[A-z-._0-9]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "representativeMicrohaplotype__quality",
      "description": "the ansi fastq per base quality score for this sequence, this is optional",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/quality",
      "alias": "quality",
      "owner": "RepresentativeMicrohaplotype",
      "domain_of": [
        "RepresentativeMicrohaplotype"
      ],
      "range": "string",
      "pattern": "^[A-z-._0-9]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "representativeMicrohaplotype__pseudocigar",
      "description": "the pseudocigar of the haplotype",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/pseudocigar",
      "alias": "pseudocigar",
      "owner": "RepresentativeMicrohaplotype",
      "domain_of": [
        "RepresentativeMicrohaplotype"
      ],
      "range": "string",
      "pattern": "^[A-z-._0-9]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "representativeMicrohaplotype__masking",
      "description": "masking info for the sequence",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/masking",
      "alias": "masking",
      "owner": "RepresentativeMicrohaplotype",
      "domain_of": [
        "RepresentativeMicrohaplotype"
      ],
      "range": "MaskingInfo",
      "multivalued": true,
      "inlined": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "representativeMicrohaplotype__alt_annotations",
      "description": "a list of additional annotations associated with this microhaplotype, e.g. wildtype, amino acid changes etc",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/alt_annotations",
      "alias": "alt_annotations",
      "owner": "RepresentativeMicrohaplotype",
      "domain_of": [
        "RepresentativeMicrohaplotype"
      ],
      "range": "string",
      "multivalued": true,
      "inlined_as_list": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "maskingInfo__seq_start",
      "description": "the start of the masking",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/seq_start",
      "alias": "seq_start",
      "owner": "MaskingInfo",
      "domain_of": [
        "MaskingInfo"
      ],
      "range": "integer",
      "required": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "maskingInfo__seq_segment_size",
      "description": "the size of the masking",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/seq_segment_size",
      "alias": "seq_segment_size",
      "owner": "MaskingInfo",
      "domain_of": [
        "MaskingInfo"
      ],
      "range": "integer",
      "required": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "maskingInfo__replacement_size",
      "description": "the size of replacement mask",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/replacement_size",
      "alias": "replacement_size",
      "owner": "MaskingInfo",
      "domain_of": [
        "MaskingInfo"
      ],
      "range": "integer",
      "required": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "representativeMicrohaplotypes__targets",
      "description": "a list of the microhaplotype for each targets ",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/targets",
      "alias": "targets",
      "owner": "RepresentativeMicrohaplotypes",
      "domain_of": [
        "RepresentativeMicrohaplotypes"
      ],
      "range": "RepresentativeMicrohaplotypesForTarget",
      "required": true,
      "multivalued": true,
      "inlined": true,
      "inlined_as_list": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "representativeMicrohaplotypesForTarget__microhaplotypes",
      "description": "a list of the microhaplotypes detected for a target ",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/microhaplotypes",
      "alias": "microhaplotypes",
      "owner": "RepresentativeMicrohaplotypesForTarget",
      "domain_of": [
        "RepresentativeMicrohaplotypesForTarget"
      ],
      "range": "RepresentativeMicrohaplotype",
      "required": true,
      "multivalued": true,
      "inlined": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "microhaplotypesDetected__experiment_samples",
      "description": "a list of the microhaplotypes detected for a sample by targets ",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/experiment_samples",
      "alias": "experiment_samples",
      "owner": "MicrohaplotypesDetected",
      "domain_of": [
        "MicrohaplotypesDetected"
      ],
      "range": "MicrohaplotypesForSample",
      "required": true,
      "multivalued": true,
      "inlined": true,
      "inlined_as_list": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "genomeInfo__name",
      "description": "name of the genome",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/name",
      "alias": "name",
      "owner": "GenomeInfo",
      "domain_of": [
        "GenomeInfo"
      ],
      "range": "string",
      "required": true,
      "pattern": "^[A-z-._0-9]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "genomeInfo__genome_version",
      "description": "the genome version",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/genome_version",
      "alias": "genome_version",
      "owner": "GenomeInfo",
      "domain_of": [
        "GenomeInfo"
      ],
      "range": "string",
      "required": true,
      "pattern": "^[A-z-._0-9]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "genomeInfo__taxon_id",
      "description": "the NCBI taxonomy number",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/taxon_id",
      "alias": "taxon_id",
      "owner": "GenomeInfo",
      "domain_of": [
        "GenomeInfo"
      ],
      "range": "integer",
      "required": true,
      "pattern": "^[0-9]$",
      "@type": "SlotDefinition"
    },
    {
      "name": "genomeInfo__url",
      "description": "a link to the where this genome file could be downloaded",
      "examples": [
        {
          "value": "https://plasmodb.org/common/downloads/release-65/Pfalciparum3D7/fasta/data/PlasmoDB-65_Pfalciparum3D7_Genome.fasta",
          "@type": "Example"
        }
      ],
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/url",
      "alias": "url",
      "owner": "GenomeInfo",
      "domain_of": [
        "GenomeInfo"
      ],
      "range": "string",
      "required": true,
      "pattern": "^(https?|ftp):\\/\\/[^\\s/$.?#].[^\\s]*$",
      "@type": "SlotDefinition"
    },
    {
      "name": "genomeInfo__chromosomes",
      "description": "a list of chromosomes found within this genome",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/chromosomes",
      "alias": "chromosomes",
      "owner": "GenomeInfo",
      "domain_of": [
        "GenomeInfo"
      ],
      "range": "string",
      "multivalued": true,
      "inlined_as_list": true,
      "pattern": "^[A-z-._0-9]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "genomeInfo__gff_url",
      "description": "a link to the where this genome's annotation file could be downloaded",
      "examples": [
        {
          "value": "https://plasmodb.org/common/downloads/release-65/Pfalciparum3D7/fasta/data/PlasmoDB-65_Pfalciparum3D7.gff",
          "@type": "Example"
        }
      ],
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/gff_url",
      "alias": "gff_url",
      "owner": "GenomeInfo",
      "domain_of": [
        "GenomeInfo"
      ],
      "range": "string",
      "pattern": "^(https?|ftp):\\/\\/[^\\s/$.?#].[^\\s]*$",
      "@type": "SlotDefinition"
    },
    {
      "name": "genomicLocation__chrom",
      "description": "the chromosome name",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/chrom",
      "alias": "chrom",
      "owner": "GenomicLocation",
      "domain_of": [
        "GenomicLocation"
      ],
      "range": "string",
      "required": true,
      "pattern": "^[A-z-._0-9]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "genomicLocation__start",
      "description": "the start of the location, 0-based positioning",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/start",
      "alias": "start",
      "owner": "GenomicLocation",
      "domain_of": [
        "GenomicLocation"
      ],
      "range": "integer",
      "required": true,
      "pattern": "^[0-9]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "genomicLocation__end",
      "description": "the end of the location, 0-based positioning",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/end",
      "alias": "end",
      "owner": "GenomicLocation",
      "domain_of": [
        "GenomicLocation"
      ],
      "range": "integer",
      "required": true,
      "pattern": "^[0-9]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "genomicLocation__strand",
      "description": "which strand the location is, either + for plus strand or - for negative strand",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/strand",
      "alias": "strand",
      "owner": "GenomicLocation",
      "domain_of": [
        "GenomicLocation"
      ],
      "range": "string",
      "pattern": "[+-]",
      "@type": "SlotDefinition"
    },
    {
      "name": "genomicLocation__ref_seq",
      "description": "the reference sequence of this genomic location",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/ref_seq",
      "alias": "ref_seq",
      "owner": "GenomicLocation",
      "domain_of": [
        "GenomicLocation"
      ],
      "range": "string",
      "pattern": "^[A-z-]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "primerInfo__location",
      "description": "what the intended genomic location of the primer is",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/location",
      "alias": "location",
      "owner": "PrimerInfo",
      "domain_of": [
        "PrimerInfo"
      ],
      "range": "GenomicLocation",
      "inlined": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "microhaplotypesForSample__target_results",
      "description": "a list of the microhaplotypes detected for a list of targets",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/target_results",
      "alias": "target_results",
      "owner": "MicrohaplotypesForSample",
      "domain_of": [
        "MicrohaplotypesForSample"
      ],
      "range": "MicrohaplotypesForTarget",
      "required": true,
      "multivalued": true,
      "inlined": true,
      "inlined_as_list": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "microhaplotypeForTarget__reads",
      "description": "the read count associated with this microhaplotype",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/reads",
      "alias": "reads",
      "owner": "MicrohaplotypeForTarget",
      "domain_of": [
        "MicrohaplotypeForTarget"
      ],
      "range": "integer",
      "required": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "microhaplotypeForTarget__umis",
      "description": "the unique molecular identifier (umi) count associated with this microhaplotype",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/umis",
      "alias": "umis",
      "owner": "MicrohaplotypeForTarget",
      "domain_of": [
        "MicrohaplotypeForTarget"
      ],
      "range": "integer",
      "@type": "SlotDefinition"
    },
    {
      "name": "microhaplotypesForTarget__haps",
      "description": "a list of the microhaplotypes detected for this target",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/haps",
      "alias": "haps",
      "owner": "MicrohaplotypesForTarget",
      "domain_of": [
        "MicrohaplotypesForTarget"
      ],
      "range": "MicrohaplotypeForTarget",
      "required": true,
      "multivalued": true,
      "inlined": true,
      "inlined_as_list": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "bioinformaticsMethodInfo__demultiplexing_method",
      "description": "the demultiplexing method used to separate raw reads from barcodes and primer targets",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/demultiplexing_method",
      "alias": "demultiplexing_method",
      "owner": "BioinformaticsMethodInfo",
      "domain_of": [
        "BioinformaticsMethodInfo"
      ],
      "range": "BioMethod",
      "required": true,
      "inlined": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "bioinformaticsMethodInfo__denoising_method",
      "description": "the method used to de-noise and/or cluster the raw reads",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/denoising_method",
      "alias": "denoising_method",
      "owner": "BioinformaticsMethodInfo",
      "domain_of": [
        "BioinformaticsMethodInfo"
      ],
      "range": "BioMethod",
      "required": true,
      "inlined": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "bioinformaticsMethodInfo__additional_methods",
      "description": "any additional methods used to analyze the data",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/additional_methods",
      "alias": "additional_methods",
      "owner": "BioinformaticsMethodInfo",
      "domain_of": [
        "BioinformaticsMethodInfo"
      ],
      "range": "BioMethod",
      "multivalued": true,
      "inlined": true,
      "inlined_as_list": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "bioinformaticsMethodInfo__bioinformatics_method_name",
      "description": "name of the collection of methods is called, e.g. pipeline ",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/bioinformatics_method_name",
      "alias": "bioinformatics_method_name",
      "owner": "BioinformaticsMethodInfo",
      "domain_of": [
        "BioinformaticsMethodInfo"
      ],
      "range": "string",
      "pattern": "^[A-z-._0-9 ]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "bioMethod__program",
      "description": "name of the program used for this portion of the pipeline",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/program",
      "alias": "program",
      "owner": "BioMethod",
      "domain_of": [
        "BioMethod"
      ],
      "range": "string",
      "required": true,
      "pattern": "^[A-z-._0-9 ]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "bioMethod__program_description",
      "description": "a short description of what this method does",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/program_description",
      "alias": "program_description",
      "owner": "BioMethod",
      "domain_of": [
        "BioMethod"
      ],
      "range": "string",
      "pattern": "^[A-z-._0-9\\(\\),\\/\\ ]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "bioMethod__additional_argument",
      "description": "any additional arguments that differ from the default",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/additional_argument",
      "alias": "additional_argument",
      "owner": "BioMethod",
      "domain_of": [
        "BioMethod"
      ],
      "range": "string",
      "multivalued": true,
      "inlined_as_list": true,
      "pattern": "^[A-z-._0-9\\(\\),\\/\\ ]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "experimentInfo__accession",
      "description": "ERA/SRA accession number for the sample if it was submitted",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/accession",
      "alias": "accession",
      "owner": "ExperimentInfo",
      "domain_of": [
        "ExperimentInfo"
      ],
      "range": "string",
      "pattern": "^[A-z-._0-9]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "experimentInfo__experiment_sample_name",
      "description": "a unique identifier for this sequence/amplification run on a specimen_name",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/experiment_sample_name",
      "identifier": true,
      "alias": "experiment_sample_name",
      "owner": "ExperimentInfo",
      "domain_of": [
        "ExperimentInfo"
      ],
      "range": "string",
      "required": true,
      "pattern": "^[A-z-._0-9 ]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "sequencingInfo__sequencing_info_name",
      "description": "a name of for the sequencing done, e.g. batch1",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/sequencing_info_name",
      "alias": "sequencing_info_name",
      "owner": "SequencingInfo",
      "domain_of": [
        "SequencingInfo"
      ],
      "range": "string",
      "required": true,
      "pattern": "^[A-z-._0-9 ]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "sequencingInfo__seq_instrument",
      "description": "the sequencing instrument used to sequence the run, e.g. ILLUMINA, Illumina MiSeq",
      "examples": [
        {
          "value": "ILLUMINA",
          "@type": "Example"
        },
        {
          "value": "Illumina MiSeq",
          "@type": "Example"
        }
      ],
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/seq_instrument",
      "alias": "seq_instrument",
      "owner": "SequencingInfo",
      "domain_of": [
        "SequencingInfo"
      ],
      "range": "string",
      "required": true,
      "pattern": "^[A-z-._0-9 ]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "sequencingInfo__seq_date",
      "description": "the date of sequencing, should be YYYY-MM or YYYY-MM-DD",
      "examples": [
        {
          "value": "2024-03-10",
          "@type": "Example"
        },
        {
          "value": "2024-03",
          "@type": "Example"
        }
      ],
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/seq_date",
      "alias": "seq_date",
      "owner": "SequencingInfo",
      "domain_of": [
        "SequencingInfo"
      ],
      "range": "string",
      "required": true,
      "pattern": "\\d{4}-(?:0[1-9]|1[0-2])(?:-(?:0[1-9]|[12][0-9]|3[01]))?",
      "@type": "SlotDefinition"
    },
    {
      "name": "sequencingInfo__nucl_acid_ext",
      "description": "Link to a reference or kit that describes the recovery of nucleic acids from the sample",
      "examples": [
        {
          "value": "https://www.paragongenomics.com/targeted-sequencing/amplicon-sequencing/cleanplex-ngs-amplicon-sequencing/",
          "@type": "Example"
        }
      ],
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/nucl_acid_ext",
      "alias": "nucl_acid_ext",
      "owner": "SequencingInfo",
      "domain_of": [
        "SequencingInfo"
      ],
      "range": "string",
      "pattern": "^(https?|ftp):\\/\\/[^\\s/$.?#].[^\\s]*$",
      "@type": "SlotDefinition"
    },
    {
      "name": "sequencingInfo__nucl_acid_amp",
      "description": "Link to a reference or kit that describes the enzymatic amplification of nucleic acids",
      "examples": [
        {
          "value": "https://www.paragongenomics.com/targeted-sequencing/amplicon-sequencing/cleanplex-ngs-amplicon-sequencing/",
          "@type": "Example"
        }
      ],
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/nucl_acid_amp",
      "alias": "nucl_acid_amp",
      "owner": "SequencingInfo",
      "domain_of": [
        "SequencingInfo"
      ],
      "range": "string",
      "pattern": "^(https?|ftp):\\/\\/[^\\s/$.?#].[^\\s]*$",
      "@type": "SlotDefinition"
    },
    {
      "name": "sequencingInfo__nucl_acid_ext_date",
      "description": "the date of the nucleoacid extraction",
      "examples": [
        {
          "value": "2024-03-10",
          "@type": "Example"
        },
        {
          "value": "2024-03",
          "@type": "Example"
        }
      ],
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/nucl_acid_ext_date",
      "alias": "nucl_acid_ext_date",
      "owner": "SequencingInfo",
      "domain_of": [
        "SequencingInfo"
      ],
      "range": "string",
      "pattern": "\\d{4}-(?:0[1-9]|1[0-2])(?:-(?:0[1-9]|[12][0-9]|3[01]))?",
      "@type": "SlotDefinition"
    },
    {
      "name": "sequencingInfo__nucl_acid_amp_date",
      "description": "the date of the nucleoacid amplification",
      "examples": [
        {
          "value": "2024-03-10",
          "@type": "Example"
        },
        {
          "value": "2024-03",
          "@type": "Example"
        }
      ],
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/nucl_acid_amp_date",
      "alias": "nucl_acid_amp_date",
      "owner": "SequencingInfo",
      "domain_of": [
        "SequencingInfo"
      ],
      "range": "string",
      "pattern": "\\d{4}-(?:0[1-9]|1[0-2])(?:-(?:0[1-9]|[12][0-9]|3[01]))?",
      "@type": "SlotDefinition"
    },
    {
      "name": "sequencingInfo__pcr_cond",
      "description": "the method/conditions for PCR, List PCR cycles used to amplify the target",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/pcr_cond",
      "alias": "pcr_cond",
      "owner": "SequencingInfo",
      "domain_of": [
        "SequencingInfo"
      ],
      "range": "string",
      "pattern": "^[A-z-._0-9\\(\\),\\/\\ ]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "sequencingInfo__lib_screen",
      "description": "Describe enrichment, screening, or normalization methods applied during amplification or library preparation, e.g. size selection 390bp, diluted to 1 ng DNA/sample",
      "examples": [
        {
          "value": "size selection 390bp, diluted to 1 ng DNA/sample",
          "@type": "Example"
        }
      ],
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/lib_screen",
      "alias": "lib_screen",
      "owner": "SequencingInfo",
      "domain_of": [
        "SequencingInfo"
      ],
      "range": "string",
      "pattern": "^[A-z-._0-9\\(\\),\\/\\ ]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "sequencingInfo__lib_layout",
      "description": "Specify the configuration of reads, e.g. paired-end",
      "examples": [
        {
          "value": "paired-end",
          "@type": "Example"
        }
      ],
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/lib_layout",
      "alias": "lib_layout",
      "owner": "SequencingInfo",
      "domain_of": [
        "SequencingInfo"
      ],
      "range": "string",
      "pattern": "^[A-z-._0-9 ]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "sequencingInfo__lib_kit",
      "description": "Name, version, and applicable cell or cycle numbers for the kit used to prepare libraries and load cells or chips for sequencing. If possible, include a part number, e.g. MiSeq Reagent Kit v3 (150-cycle), MS-102-3001",
      "examples": [
        {
          "value": "MiSeq Reagent Kit v3 (150-cycle), MS-102-3001",
          "@type": "Example"
        }
      ],
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/lib_kit",
      "alias": "lib_kit",
      "owner": "SequencingInfo",
      "domain_of": [
        "SequencingInfo"
      ],
      "range": "string",
      "pattern": "^[A-z-._0-9\\(\\),\\/\\ ]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "sequencingInfo__seq_center",
      "description": "Name of facility where sequencing was performed (lab, core facility, or company)",
      "examples": [
        {
          "value": "UCSF sequencing core",
          "@type": "Example"
        }
      ],
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/seq_center",
      "alias": "seq_center",
      "owner": "SequencingInfo",
      "domain_of": [
        "SequencingInfo"
      ],
      "range": "string",
      "pattern": "^[A-z-._0-9\\(\\),\\/\\ ]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "parasiteDensity__method",
      "description": "the method of how this density was obtained",
      "examples": [
        {
          "value": "qpcr",
          "@type": "Example"
        },
        {
          "value": "microscopy",
          "@type": "Example"
        }
      ],
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/method",
      "alias": "method",
      "owner": "ParasiteDensity",
      "domain_of": [
        "ParasiteDensity"
      ],
      "range": "string",
      "required": true,
      "pattern": "^[A-z-._0-9 ]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "parasiteDensity__density",
      "description": "the density in microliters",
      "examples": [
        {
          "value": "25.0",
          "@type": "Example"
        },
        {
          "value": "10e5",
          "@type": "Example"
        }
      ],
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/density",
      "alias": "density",
      "owner": "ParasiteDensity",
      "domain_of": [
        "ParasiteDensity"
      ],
      "range": "double",
      "required": true,
      "minimum_value": 0,
      "pattern": "^[-+]?\\\\d*\\\\.?\\\\d+(?:[eE][-+]?\\\\d+)?$",
      "@type": "SlotDefinition"
    },
    {
      "name": "specimenInfo__specimen_name",
      "description": "an identifier for the specimen",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/specimen_name",
      "identifier": true,
      "alias": "specimen_name",
      "owner": "SpecimenInfo",
      "domain_of": [
        "SpecimenInfo"
      ],
      "range": "string",
      "required": true,
      "pattern": "^[A-z-._0-9 ]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "specimenInfo__samp_taxon_id",
      "description": "the NCBI taxonomy number of the organism of interest",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/samp_taxon_id",
      "alias": "samp_taxon_id",
      "owner": "SpecimenInfo",
      "domain_of": [
        "SpecimenInfo"
      ],
      "range": "integer",
      "required": true,
      "pattern": "^[0-9]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "specimenInfo__individual_id",
      "description": "an identifier for the individual a specimen was collected from",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/individual_id",
      "alias": "individual_id",
      "owner": "SpecimenInfo",
      "domain_of": [
        "SpecimenInfo"
      ],
      "range": "integer",
      "pattern": "^[0-9]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "specimenInfo__host_taxon_id",
      "description": "optional the NCBI taxonomy number of the host of the organism",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/host_taxon_id",
      "alias": "host_taxon_id",
      "owner": "SpecimenInfo",
      "domain_of": [
        "SpecimenInfo"
      ],
      "range": "integer",
      "pattern": "^[0-9]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "specimenInfo__alternate_identifiers",
      "description": "a list of optional alternative names for the samples",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/alternate_identifiers",
      "alias": "alternate_identifiers",
      "owner": "SpecimenInfo",
      "domain_of": [
        "SpecimenInfo"
      ],
      "range": "string",
      "multivalued": true,
      "inlined_as_list": true,
      "pattern": "^[A-z-._0-9 ]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "specimenInfo__host_sex",
      "description": "if specimen is from a person, the sex listed for that person",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/host_sex",
      "alias": "host_sex",
      "owner": "SpecimenInfo",
      "domain_of": [
        "SpecimenInfo"
      ],
      "range": "string",
      "pattern": "^[A-z-._0-9 ]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "specimenInfo__parasite_density_info",
      "description": "one or more parasite densities in microliters for this specimen",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/parasite_density_info",
      "alias": "parasite_density_info",
      "owner": "SpecimenInfo",
      "domain_of": [
        "SpecimenInfo"
      ],
      "range": "ParasiteDensity",
      "multivalued": true,
      "inlined": true,
      "inlined_as_list": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "specimenInfo__collection_date",
      "description": "the date of the sample collection, can be YYYY, YYYY-MM, or YYYY-MM-DD",
      "examples": [
        {
          "value": "1988",
          "@type": "Example"
        },
        {
          "value": "1988-06",
          "@type": "Example"
        },
        {
          "value": "1988-06-26",
          "@type": "Example"
        }
      ],
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/collection_date",
      "alias": "collection_date",
      "owner": "SpecimenInfo",
      "domain_of": [
        "SpecimenInfo"
      ],
      "range": "string",
      "required": true,
      "pattern": "\\d{4}-(?:0[1-9]|1[0-2])(?:-(?:0[1-9]|[12][0-9]|3[01]))?|NA",
      "@type": "SlotDefinition"
    },
    {
      "name": "specimenInfo__host_date_of_birth",
      "description": "if specimen is from a person, the date of birth of that person, can be YYYY, YYYY-MM, or YYYY-MM-DD",
      "examples": [
        {
          "value": "1988",
          "@type": "Example"
        },
        {
          "value": "1988-06",
          "@type": "Example"
        },
        {
          "value": "1988-06-26",
          "@type": "Example"
        }
      ],
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/host_date_of_birth",
      "alias": "host_date_of_birth",
      "owner": "SpecimenInfo",
      "domain_of": [
        "SpecimenInfo"
      ],
      "range": "string",
      "pattern": "\\d{4}-(?:0[1-9]|1[0-2])(?:-(?:0[1-9]|[12][0-9]|3[01]))?|NA",
      "@type": "SlotDefinition"
    },
    {
      "name": "specimenInfo__collection_country",
      "description": "the name of country collected in, would be the same as admin level 0",
      "examples": [
        {
          "value": "Senegal",
          "@type": "Example"
        },
        {
          "value": "USA",
          "@type": "Example"
        },
        {
          "value": "Japan",
          "@type": "Example"
        }
      ],
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/collection_country",
      "alias": "collection_country",
      "owner": "SpecimenInfo",
      "domain_of": [
        "SpecimenInfo"
      ],
      "range": "string",
      "required": true,
      "pattern": "^[A-z-._0-9 ]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "specimenInfo__geo_admin1",
      "description": "geographical admin level 1, the secondary large demarcation of a nation (nation = admin level 0)",
      "examples": [
        {
          "value": "State/Province",
          "@type": "Example"
        }
      ],
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/geo_admin1",
      "alias": "geo_admin1",
      "owner": "SpecimenInfo",
      "domain_of": [
        "SpecimenInfo"
      ],
      "range": "string",
      "pattern": "^[A-z-._0-9 ]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "specimenInfo__geo_admin2",
      "description": "geographical admin level 2, the third large demarcation of a nation (nation = admin level 0)",
      "examples": [
        {
          "value": "city",
          "@type": "Example"
        }
      ],
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/geo_admin2",
      "alias": "geo_admin2",
      "owner": "SpecimenInfo",
      "domain_of": [
        "SpecimenInfo"
      ],
      "range": "string",
      "pattern": "^[A-z-._0-9 ]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "specimenInfo__geo_admin3",
      "description": "geographical admin level 3, the third large demarcation of a nation (nation = admin level 0)",
      "examples": [
        {
          "value": "district of a city",
          "@type": "Example"
        }
      ],
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/geo_admin3",
      "alias": "geo_admin3",
      "owner": "SpecimenInfo",
      "domain_of": [
        "SpecimenInfo"
      ],
      "range": "string",
      "pattern": "^[A-z-._0-9 ]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "specimenInfo__lat_lon",
      "description": "the latitude and longitude of the collection site of the specimen",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/lat_lon",
      "alias": "lat_lon",
      "owner": "SpecimenInfo",
      "domain_of": [
        "SpecimenInfo"
      ],
      "range": "string",
      "pattern": "^[-+]?\\d{1,2}(?:\\.\\d+)?,[-+]?\\d{1,3}(?:\\.\\d+)?$",
      "@type": "SlotDefinition"
    },
    {
      "name": "specimenInfo__collector",
      "description": "the name of the primary person managing the specimen",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/collector",
      "alias": "collector",
      "owner": "SpecimenInfo",
      "domain_of": [
        "SpecimenInfo"
      ],
      "range": "string",
      "required": true,
      "pattern": "^[A-z-._0-9\\(\\),\\/\\ ]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "specimenInfo__samp_store_loc",
      "description": "the sample store site, address or facility name",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/samp_store_loc",
      "alias": "samp_store_loc",
      "owner": "SpecimenInfo",
      "domain_of": [
        "SpecimenInfo"
      ],
      "range": "string",
      "required": true,
      "pattern": "^[A-z-._0-9\\(\\),\\/\\ ]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "specimenInfo__samp_collect_device",
      "description": "the way the sample was collected, e.g. whole blood, dried blood spot, etc",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/samp_collect_device",
      "alias": "samp_collect_device",
      "owner": "SpecimenInfo",
      "domain_of": [
        "SpecimenInfo"
      ],
      "range": "string",
      "required": true,
      "pattern": "^[A-z-._0-9\\(\\),\\/\\ ]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "specimenInfo__project_name",
      "description": "a name of the project under which the sample is organized",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/project_name",
      "alias": "project_name",
      "owner": "SpecimenInfo",
      "domain_of": [
        "SpecimenInfo"
      ],
      "range": "string",
      "required": true,
      "pattern": "^[A-z-._0-9\\(\\),\\/\\ ]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "specimenInfo__sample_comments",
      "description": "any additional comments about the sample",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/sample_comments",
      "alias": "sample_comments",
      "owner": "SpecimenInfo",
      "domain_of": [
        "SpecimenInfo"
      ],
      "range": "string",
      "pattern": "^[A-z-._0-9\\(\\),\\/\\ ]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "bioinformaticsRunInfo__run_date",
      "description": "the date when the run was done, should be YYYY-MM-DD",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/run_date",
      "alias": "run_date",
      "owner": "BioinformaticsRunInfo",
      "domain_of": [
        "BioinformaticsRunInfo"
      ],
      "range": "string",
      "required": true,
      "pattern": "\\d{4}-(?:0[1-9]|1[0-2])(?:-(?:0[1-9]|[12][0-9]|3[01]))?",
      "@type": "SlotDefinition"
    },
    {
      "name": "bioinformaticsRunInfo__bioinformatics_run_name",
      "description": "a name to for this run",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/bioinformatics_run_name",
      "alias": "bioinformatics_run_name",
      "owner": "BioinformaticsRunInfo",
      "domain_of": [
        "BioinformaticsRunInfo"
      ],
      "range": "string",
      "pattern": "^[A-z-._0-9 ]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "pmoGenerationMethod__program_name",
      "description": "the name of the program",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/program_name",
      "alias": "program_name",
      "owner": "PmoGenerationMethod",
      "domain_of": [
        "PmoGenerationMethod"
      ],
      "range": "string",
      "required": true,
      "pattern": "^[A-z-._0-9 ]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "pmoHeader__pmo_version",
      "description": "the version of the PMO file, should be in the format of v[MAJOR].[MINOR].[PATCH]",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/pmo_version",
      "alias": "pmo_version",
      "owner": "PmoHeader",
      "domain_of": [
        "PmoHeader"
      ],
      "range": "string",
      "required": true,
      "pattern": "^[A-z-._0-9 ]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "pmoHeader__creation_date",
      "description": "the date of when the PMO file was created or modified, should be YYYY-MM-DD",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/creation_date",
      "alias": "creation_date",
      "owner": "PmoHeader",
      "domain_of": [
        "PmoHeader"
      ],
      "range": "string",
      "pattern": "\\d{4}-(?:0[1-9]|1[0-2])(?:-(?:0[1-9]|[12][0-9]|3[01]))?",
      "@type": "SlotDefinition"
    },
    {
      "name": "pmoHeader__generation_method",
      "description": "the generation method to create this PMO ",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/generation_method",
      "alias": "generation_method",
      "owner": "PmoHeader",
      "domain_of": [
        "PmoHeader"
      ],
      "range": "PmoGenerationMethod",
      "inlined": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "stageReadCounts__read_count",
      "description": "the read counts",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/read_count",
      "alias": "read_count",
      "owner": "StageReadCounts",
      "domain_of": [
        "StageReadCounts"
      ],
      "range": "integer",
      "required": true,
      "pattern": "^[0-9]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "stageReadCounts__stage",
      "description": "the stage of the pipeline, e.g. demultiplexed, denoised, etc",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/stage",
      "alias": "stage",
      "owner": "StageReadCounts",
      "domain_of": [
        "StageReadCounts"
      ],
      "range": "string",
      "required": true,
      "pattern": "^[A-z-._0-9 ]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "readCountsByStageForTarget__stages",
      "description": "the read counts by each stage",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/stages",
      "alias": "stages",
      "owner": "ReadCountsByStageForTarget",
      "domain_of": [
        "ReadCountsByStageForTarget"
      ],
      "range": "StageReadCounts",
      "required": true,
      "multivalued": true,
      "inlined": true,
      "inlined_as_list": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "readCountsByStageForExperimentalSample__total_raw_count",
      "description": "the raw counts off the sequencing machine that a sample began with",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/total_raw_count",
      "alias": "total_raw_count",
      "owner": "ReadCountsByStageForExperimentalSample",
      "domain_of": [
        "ReadCountsByStageForExperimentalSample"
      ],
      "range": "integer",
      "required": true,
      "pattern": "^[0-9]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "readCountsByStageForExperimentalSample__read_counts_for_targets",
      "description": "a list of counts by stage for a target",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/read_counts_for_targets",
      "alias": "read_counts_for_targets",
      "owner": "ReadCountsByStageForExperimentalSample",
      "domain_of": [
        "ReadCountsByStageForExperimentalSample"
      ],
      "range": "ReadCountsByStageForTarget",
      "multivalued": true,
      "inlined": true,
      "inlined_as_list": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "readCountsByStage__read_counts_by_experimental_sample_by_stage",
      "description": "a list by experiment_sample for the counts at each stage",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/read_counts_by_experimental_sample_by_stage",
      "alias": "read_counts_by_experimental_sample_by_stage",
      "owner": "ReadCountsByStage",
      "domain_of": [
        "ReadCountsByStage"
      ],
      "range": "ReadCountsByStageForExperimentalSample",
      "required": true,
      "multivalued": true,
      "inlined": true,
      "inlined_as_list": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "portableMicrohaplotypeObject__experiment_info",
      "description": "a list of experiments of all the seq/amp of the specimens within this project",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/experiment_info",
      "alias": "experiment_info",
      "owner": "PortableMicrohaplotypeObject",
      "domain_of": [
        "PortableMicrohaplotypeObject"
      ],
      "range": "ExperimentInfo",
      "required": true,
      "multivalued": true,
      "inlined": true,
      "inlined_as_list": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "portableMicrohaplotypeObject__specimen_info",
      "description": "a list of specimens of all the samples within this project",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/specimen_info",
      "alias": "specimen_info",
      "owner": "PortableMicrohaplotypeObject",
      "domain_of": [
        "PortableMicrohaplotypeObject"
      ],
      "range": "SpecimenInfo",
      "required": true,
      "multivalued": true,
      "inlined": true,
      "inlined_as_list": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "portableMicrohaplotypeObject__sequencing_info",
      "description": "a list of sequencing info for this project",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/sequencing_info",
      "alias": "sequencing_info",
      "owner": "PortableMicrohaplotypeObject",
      "domain_of": [
        "PortableMicrohaplotypeObject"
      ],
      "range": "SequencingInfo",
      "required": true,
      "multivalued": true,
      "inlined": true,
      "inlined_as_list": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "portableMicrohaplotypeObject__panel_info",
      "description": "a list of info on the panels",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/panel_info",
      "alias": "panel_info",
      "owner": "PortableMicrohaplotypeObject",
      "domain_of": [
        "PortableMicrohaplotypeObject"
      ],
      "range": "PanelInfo",
      "required": true,
      "multivalued": true,
      "inlined": true,
      "inlined_as_list": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "portableMicrohaplotypeObject__target_info",
      "description": "a list of info on the targets",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/target_info",
      "alias": "target_info",
      "owner": "PortableMicrohaplotypeObject",
      "domain_of": [
        "PortableMicrohaplotypeObject"
      ],
      "range": "TargetInfo",
      "required": true,
      "multivalued": true,
      "inlined": true,
      "inlined_as_list": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "portableMicrohaplotypeObject__targeted_genomes",
      "description": "a list of genomes that the targets in TargetInfo refer to",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/targeted_genomes",
      "alias": "targeted_genomes",
      "owner": "PortableMicrohaplotypeObject",
      "domain_of": [
        "PortableMicrohaplotypeObject"
      ],
      "range": "GenomeInfo",
      "required": true,
      "multivalued": true,
      "inlined": true,
      "inlined_as_list": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "portableMicrohaplotypeObject__microhaplotypes_info",
      "description": "a list of the information on the representative microhaplotypes",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/microhaplotypes_info",
      "alias": "microhaplotypes_info",
      "owner": "PortableMicrohaplotypeObject",
      "domain_of": [
        "PortableMicrohaplotypeObject"
      ],
      "range": "RepresentativeMicrohaplotypes",
      "required": true,
      "inlined": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "portableMicrohaplotypeObject__bioinformatics_methods_info",
      "description": "the bioinformatics pipeline/methods used to generated the amplicon analysis for this project",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/bioinformatics_methods_info",
      "alias": "bioinformatics_methods_info",
      "owner": "PortableMicrohaplotypeObject",
      "domain_of": [
        "PortableMicrohaplotypeObject"
      ],
      "range": "BioinformaticsMethodInfo",
      "required": true,
      "multivalued": true,
      "inlined": true,
      "inlined_as_list": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "portableMicrohaplotypeObject__bioinformatics_run_info",
      "description": "the runtime info for the bioinformatics pipeline used to generated the amplicon analysis for this project",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/bioinformatics_run_info",
      "alias": "bioinformatics_run_info",
      "owner": "PortableMicrohaplotypeObject",
      "domain_of": [
        "PortableMicrohaplotypeObject"
      ],
      "range": "BioinformaticsRunInfo",
      "required": true,
      "multivalued": true,
      "inlined": true,
      "inlined_as_list": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "portableMicrohaplotypeObject__microhaplotypes_detected",
      "description": "the microhaplotypes detected in this projects",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/microhaplotypes_detected",
      "alias": "microhaplotypes_detected",
      "owner": "PortableMicrohaplotypeObject",
      "domain_of": [
        "PortableMicrohaplotypeObject"
      ],
      "range": "MicrohaplotypesDetected",
      "required": true,
      "multivalued": true,
      "inlined": true,
      "inlined_as_list": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "portableMicrohaplotypeObject__pmo_header",
      "description": "the PMO information for this file including version etc",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/pmo_header",
      "alias": "pmo_header",
      "owner": "PortableMicrohaplotypeObject",
      "domain_of": [
        "PortableMicrohaplotypeObject"
      ],
      "range": "PmoHeader",
      "required": true,
      "inlined": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "portableMicrohaplotypeObject__read_counts_by_stage",
      "description": "the read counts for different stages of the pipeline",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/read_counts_by_stage",
      "alias": "read_counts_by_stage",
      "owner": "PortableMicrohaplotypeObject",
      "domain_of": [
        "PortableMicrohaplotypeObject"
      ],
      "range": "ReadCountsByStage",
      "multivalued": true,
      "inlined": true,
      "inlined_as_list": true,
      "@type": "SlotDefinition"
    },
    {
      "name": "RepresentativeMicrohaplotypesForTarget_target_id",
      "definition_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/target_id",
      "description": "the index into the target_info list",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "is_a": "target_id",
      "domain": "RepresentativeMicrohaplotypesForTarget",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/target_id",
      "identifier": true,
      "alias": "target_id",
      "owner": "RepresentativeMicrohaplotypesForTarget",
      "domain_of": [
        "RepresentativeMicrohaplotypesForTarget"
      ],
      "is_usage_slot": true,
      "usage_slot_name": "target_id",
      "range": "integer",
      "required": true,
      "pattern": "^[0-9]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "ExperimentInfo_specimen_id",
      "definition_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/specimen_id",
      "description": "the index into the specimen_info list",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "is_a": "specimen_id",
      "domain": "ExperimentInfo",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/specimen_id",
      "alias": "specimen_id",
      "owner": "ExperimentInfo",
      "domain_of": [
        "ExperimentInfo"
      ],
      "is_usage_slot": true,
      "usage_slot_name": "specimen_id",
      "range": "integer",
      "required": true,
      "pattern": "^[0-9]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "ExperimentInfo_plate_name",
      "definition_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/plate_name",
      "description": "a name of plate the specimen was in",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "is_a": "plate_name",
      "domain": "ExperimentInfo",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/plate_name",
      "alias": "plate_name",
      "owner": "ExperimentInfo",
      "domain_of": [
        "ExperimentInfo"
      ],
      "is_usage_slot": true,
      "usage_slot_name": "plate_name",
      "range": "string",
      "pattern": "^[A-z-._0-9 ]+$",
      "@type": "SlotDefinition"
    },
    {
      "name": "ExperimentInfo_plate_row",
      "definition_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/plate_row",
      "description": "the row the specimen was in",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "is_a": "plate_row",
      "domain": "ExperimentInfo",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/plate_row",
      "alias": "plate_row",
      "owner": "ExperimentInfo",
      "domain_of": [
        "ExperimentInfo"
      ],
      "is_usage_slot": true,
      "usage_slot_name": "plate_row",
      "range": "string",
      "pattern": "^[A-z]$",
      "@type": "SlotDefinition"
    },
    {
      "name": "ExperimentInfo_plate_col",
      "definition_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/plate_col",
      "description": "the column the specimen was in",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "is_a": "plate_col",
      "domain": "ExperimentInfo",
      "slot_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/plate_col",
      "alias": "plate_col",
      "owner": "ExperimentInfo",
      "domain_of": [
        "ExperimentInfo"
      ],
      "is_usage_slot": true,
      "usage_slot_name": "plate_col",
      "range": "integer",
      "pattern": "^[0-9]+$",
      "@type": "SlotDefinition"
    }
  ],
  "classes": [
    {
      "name": "MarkerOfInterest",
      "definition_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/MarkerOfInterest",
      "description": "A specific genomic location of interest, e.g. drug resistance, or other phenotypical marker",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slots": [
        "markerOfInterest__marker_location",
        "markerOfInterest__associations"
      ],
      "slot_usage": {},
      "attributes": [
        {
          "name": "marker_location",
          "description": "the genomic location",
          "range": "GenomicLocation",
          "@type": "SlotDefinition"
        },
        {
          "name": "associations",
          "description": "a list of associations with this marker, e.g. SP resistance, etc",
          "range": "string",
          "multivalued": true,
          "pattern": "^[A-z-._0-9]+$",
          "@type": "SlotDefinition"
        }
      ],
      "class_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/MarkerOfInterest",
      "@type": "ClassDefinition"
    },
    {
      "name": "TargetInfo",
      "definition_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/TargetInfo",
      "description": "Information about a specific target within a genome",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slots": [
        "targetInfo__target_name",
        "targetInfo__gene_name",
        "targetInfo__insert_location",
        "targetInfo__forward_primers",
        "targetInfo__reverse_primers",
        "targetInfo__target_attributes"
      ],
      "slot_usage": {},
      "attributes": [
        {
          "name": "target_name",
          "description": "an identifier for this target",
          "range": "string",
          "required": true,
          "pattern": "^[A-z-._0-9]+$",
          "@type": "SlotDefinition"
        },
        {
          "name": "gene_name",
          "description": "an identifier of the gene, if any, is being covered with this targeted",
          "range": "string",
          "pattern": "^[A-z-._0-9]+$",
          "@type": "SlotDefinition"
        },
        {
          "name": "insert_location",
          "description": "the intended genomic location of the insert of the amplicon (the location between the end of the forward primer and the beginning of the reverse primer)",
          "range": "GenomicLocation",
          "@type": "SlotDefinition"
        },
        {
          "name": "forward_primers",
          "description": "A list of forward primers associated with this target",
          "range": "PrimerInfo",
          "required": true,
          "multivalued": true,
          "inlined": true,
          "@type": "SlotDefinition"
        },
        {
          "name": "reverse_primers",
          "description": "A list of reverse primers associated with this target",
          "range": "PrimerInfo",
          "required": true,
          "multivalued": true,
          "inlined": true,
          "@type": "SlotDefinition"
        },
        {
          "name": "target_attributes",
          "description": "a list of classification type for the primer target",
          "examples": [
            {
              "value": "Diversity",
              "@type": "Example"
            },
            {
              "value": "Drug_Resistance",
              "@type": "Example"
            },
            {
              "value": "Diagnostics",
              "@type": "Example"
            }
          ],
          "range": "string",
          "multivalued": true,
          "@type": "SlotDefinition"
        }
      ],
      "class_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/TargetInfo",
      "@type": "ClassDefinition"
    },
    {
      "name": "ReactionInfo",
      "definition_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/ReactionInfo",
      "description": "information on a panel of targeted amplicon primer pairs",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slots": [
        "reactionInfo__panel_targets",
        "reactionInfo__reaction_name"
      ],
      "slot_usage": {},
      "attributes": [
        {
          "name": "panel_targets",
          "description": "a list of the target indexes in the target_info list",
          "range": "integer",
          "required": true,
          "multivalued": true,
          "inlined_as_list": true,
          "@type": "SlotDefinition"
        },
        {
          "name": "reaction_name",
          "description": "a name for this reaction",
          "range": "string",
          "required": true,
          "pattern": "^[A-z-._0-9]+$",
          "@type": "SlotDefinition"
        }
      ],
      "class_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/ReactionInfo",
      "@type": "ClassDefinition"
    },
    {
      "name": "PanelInfo",
      "definition_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/PanelInfo",
      "description": "information on a panel of targeted amplicon primer pairs",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slots": [
        "panelInfo__reactions",
        "panelInfo__panel_name"
      ],
      "slot_usage": {},
      "attributes": [
        {
          "name": "reactions",
          "description": "a list of 1 or more reactions that this panel contains, each reactions list the targets that were amplified in that reaction, e.g. pool1, pool2",
          "range": "ReactionInfo",
          "required": true,
          "multivalued": true,
          "@type": "SlotDefinition"
        },
        {
          "name": "panel_name",
          "description": "a name for the panel",
          "range": "string",
          "required": true,
          "pattern": "^[A-z-._0-9]+$",
          "@type": "SlotDefinition"
        }
      ],
      "class_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/PanelInfo",
      "@type": "ClassDefinition"
    },
    {
      "name": "RepresentativeMicrohaplotype",
      "definition_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/RepresentativeMicrohaplotype",
      "description": "the representative sequence for a microhaplotype, similar to a fast(a/q) format",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slots": [
        "seq",
        "representativeMicrohaplotype__microhaplotype_name",
        "representativeMicrohaplotype__quality",
        "representativeMicrohaplotype__pseudocigar",
        "representativeMicrohaplotype__masking",
        "representativeMicrohaplotype__alt_annotations"
      ],
      "slot_usage": {},
      "attributes": [
        {
          "name": "microhaplotype_name",
          "description": "an optional name for this microhaplotype",
          "range": "string",
          "pattern": "^[A-z-._0-9]+$",
          "@type": "SlotDefinition"
        },
        {
          "name": "quality",
          "description": "the ansi fastq per base quality score for this sequence, this is optional",
          "range": "string",
          "pattern": "^[A-z-._0-9]+$",
          "@type": "SlotDefinition"
        },
        {
          "name": "pseudocigar",
          "description": "the pseudocigar of the haplotype",
          "range": "string",
          "pattern": "^[A-z-._0-9]+$",
          "@type": "SlotDefinition"
        },
        {
          "name": "masking",
          "description": "masking info for the sequence",
          "range": "MaskingInfo",
          "multivalued": true,
          "@type": "SlotDefinition"
        },
        {
          "name": "alt_annotations",
          "description": "a list of additional annotations associated with this microhaplotype, e.g. wildtype, amino acid changes etc",
          "range": "string",
          "multivalued": true,
          "inlined_as_list": true,
          "@type": "SlotDefinition"
        }
      ],
      "class_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/RepresentativeMicrohaplotype",
      "@type": "ClassDefinition"
    },
    {
      "name": "MaskingInfo",
      "definition_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/MaskingInfo",
      "description": "information about a subsegment of the sequence that should be masked",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slots": [
        "maskingInfo__seq_start",
        "maskingInfo__seq_segment_size",
        "maskingInfo__replacement_size"
      ],
      "slot_usage": {},
      "attributes": [
        {
          "name": "seq_start",
          "description": "the start of the masking",
          "range": "integer",
          "required": true,
          "@type": "SlotDefinition"
        },
        {
          "name": "seq_segment_size",
          "description": "the size of the masking",
          "range": "integer",
          "required": true,
          "@type": "SlotDefinition"
        },
        {
          "name": "replacement_size",
          "description": "the size of replacement mask",
          "range": "integer",
          "required": true,
          "@type": "SlotDefinition"
        }
      ],
      "class_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/MaskingInfo",
      "@type": "ClassDefinition"
    },
    {
      "name": "RepresentativeMicrohaplotypes",
      "definition_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/RepresentativeMicrohaplotypes",
      "description": "a collection of representative sequences for microhaplotypes for all targets",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slots": [
        "representativeMicrohaplotypes__targets"
      ],
      "slot_usage": {},
      "attributes": [
        {
          "name": "targets",
          "description": "a list of the microhaplotype for each targets ",
          "range": "RepresentativeMicrohaplotypesForTarget",
          "required": true,
          "multivalued": true,
          "inlined_as_list": true,
          "@type": "SlotDefinition"
        }
      ],
      "class_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/RepresentativeMicrohaplotypes",
      "@type": "ClassDefinition"
    },
    {
      "name": "RepresentativeMicrohaplotypesForTarget",
      "definition_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/RepresentativeMicrohaplotypesForTarget",
      "description": "a list of the representative sequence for a microhaplotypes, similar to a fast(a/q) format",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slots": [
        "RepresentativeMicrohaplotypesForTarget_target_id",
        "representativeMicrohaplotypesForTarget__microhaplotypes"
      ],
      "slot_usage": {},
      "attributes": [
        {
          "name": "microhaplotypes",
          "description": "a list of the microhaplotypes detected for a target ",
          "range": "RepresentativeMicrohaplotype",
          "required": true,
          "multivalued": true,
          "@type": "SlotDefinition"
        }
      ],
      "class_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/RepresentativeMicrohaplotypesForTarget",
      "@type": "ClassDefinition"
    },
    {
      "name": "MicrohaplotypesDetected",
      "definition_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/MicrohaplotypesDetected",
      "description": "the microhaplotypes detected in a targeted amplicon analysis",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slots": [
        "bioinformatics_run_id",
        "microhaplotypesDetected__experiment_samples"
      ],
      "slot_usage": {},
      "attributes": [
        {
          "name": "experiment_samples",
          "description": "a list of the microhaplotypes detected for a sample by targets ",
          "range": "MicrohaplotypesForSample",
          "required": true,
          "multivalued": true,
          "inlined_as_list": true,
          "@type": "SlotDefinition"
        }
      ],
      "class_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/MicrohaplotypesDetected",
      "@type": "ClassDefinition"
    },
    {
      "name": "GenomeInfo",
      "definition_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/GenomeInfo",
      "description": "information on a genome",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slots": [
        "genomeInfo__name",
        "genomeInfo__genome_version",
        "genomeInfo__taxon_id",
        "genomeInfo__url",
        "genomeInfo__chromosomes",
        "genomeInfo__gff_url"
      ],
      "slot_usage": {},
      "attributes": [
        {
          "name": "name",
          "description": "name of the genome",
          "range": "string",
          "required": true,
          "pattern": "^[A-z-._0-9]+$",
          "@type": "SlotDefinition"
        },
        {
          "name": "genome_version",
          "description": "the genome version",
          "range": "string",
          "required": true,
          "pattern": "^[A-z-._0-9]+$",
          "@type": "SlotDefinition"
        },
        {
          "name": "taxon_id",
          "description": "the NCBI taxonomy number",
          "range": "integer",
          "required": true,
          "pattern": "^[0-9]$",
          "@type": "SlotDefinition"
        },
        {
          "name": "url",
          "description": "a link to the where this genome file could be downloaded",
          "examples": [
            {
              "value": "https://plasmodb.org/common/downloads/release-65/Pfalciparum3D7/fasta/data/PlasmoDB-65_Pfalciparum3D7_Genome.fasta",
              "@type": "Example"
            }
          ],
          "range": "string",
          "required": true,
          "pattern": "^(https?|ftp):\\/\\/[^\\s/$.?#].[^\\s]*$",
          "@type": "SlotDefinition"
        },
        {
          "name": "chromosomes",
          "description": "a list of chromosomes found within this genome",
          "range": "string",
          "multivalued": true,
          "inlined_as_list": true,
          "pattern": "^[A-z-._0-9]+$",
          "@type": "SlotDefinition"
        },
        {
          "name": "gff_url",
          "description": "a link to the where this genome's annotation file could be downloaded",
          "examples": [
            {
              "value": "https://plasmodb.org/common/downloads/release-65/Pfalciparum3D7/fasta/data/PlasmoDB-65_Pfalciparum3D7.gff",
              "@type": "Example"
            }
          ],
          "range": "string",
          "pattern": "^(https?|ftp):\\/\\/[^\\s/$.?#].[^\\s]*$",
          "@type": "SlotDefinition"
        }
      ],
      "class_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/GenomeInfo",
      "@type": "ClassDefinition"
    },
    {
      "name": "GenomicLocation",
      "definition_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/GenomicLocation",
      "description": "information on the genomic location of specific sequence",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slots": [
        "genome_id",
        "genomicLocation__chrom",
        "genomicLocation__start",
        "genomicLocation__end",
        "genomicLocation__strand",
        "genomicLocation__ref_seq"
      ],
      "slot_usage": {},
      "attributes": [
        {
          "name": "chrom",
          "description": "the chromosome name",
          "range": "string",
          "required": true,
          "pattern": "^[A-z-._0-9]+$",
          "@type": "SlotDefinition"
        },
        {
          "name": "start",
          "description": "the start of the location, 0-based positioning",
          "range": "integer",
          "required": true,
          "pattern": "^[0-9]+$",
          "@type": "SlotDefinition"
        },
        {
          "name": "end",
          "description": "the end of the location, 0-based positioning",
          "range": "integer",
          "required": true,
          "pattern": "^[0-9]+$",
          "@type": "SlotDefinition"
        },
        {
          "name": "strand",
          "description": "which strand the location is, either + for plus strand or - for negative strand",
          "range": "string",
          "pattern": "[+-]",
          "@type": "SlotDefinition"
        },
        {
          "name": "ref_seq",
          "description": "the reference sequence of this genomic location",
          "range": "string",
          "pattern": "^[A-z-]+$",
          "@type": "SlotDefinition"
        }
      ],
      "class_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/GenomicLocation",
      "@type": "ClassDefinition"
    },
    {
      "name": "PrimerInfo",
      "definition_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/PrimerInfo",
      "description": "information on a primer sequence",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slots": [
        "seq",
        "primerInfo__location"
      ],
      "slot_usage": {},
      "attributes": [
        {
          "name": "location",
          "description": "what the intended genomic location of the primer is",
          "range": "GenomicLocation",
          "@type": "SlotDefinition"
        }
      ],
      "class_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/PrimerInfo",
      "@type": "ClassDefinition"
    },
    {
      "name": "MicrohaplotypesForSample",
      "definition_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/MicrohaplotypesForSample",
      "description": "Microhaplotypes detected for a sample for all targets",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slots": [
        "experiment_sample_id",
        "microhaplotypesForSample__target_results"
      ],
      "slot_usage": {},
      "attributes": [
        {
          "name": "target_results",
          "description": "a list of the microhaplotypes detected for a list of targets",
          "range": "MicrohaplotypesForTarget",
          "required": true,
          "multivalued": true,
          "inlined_as_list": true,
          "@type": "SlotDefinition"
        }
      ],
      "class_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/MicrohaplotypesForSample",
      "@type": "ClassDefinition"
    },
    {
      "name": "MicrohaplotypeForTarget",
      "definition_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/MicrohaplotypeForTarget",
      "description": "Microhaplotype detected for a specific target",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slots": [
        "mhap_id",
        "microhaplotypeForTarget__reads",
        "microhaplotypeForTarget__umis"
      ],
      "slot_usage": {},
      "attributes": [
        {
          "name": "reads",
          "description": "the read count associated with this microhaplotype",
          "range": "integer",
          "required": true,
          "@type": "SlotDefinition"
        },
        {
          "name": "umis",
          "description": "the unique molecular identifier (umi) count associated with this microhaplotype",
          "range": "integer",
          "@type": "SlotDefinition"
        }
      ],
      "class_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/MicrohaplotypeForTarget",
      "@type": "ClassDefinition"
    },
    {
      "name": "MicrohaplotypesForTarget",
      "definition_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/MicrohaplotypesForTarget",
      "description": "Microhaplotypes detected for a specific target",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slots": [
        "mhaps_target_id",
        "microhaplotypesForTarget__haps"
      ],
      "slot_usage": {},
      "attributes": [
        {
          "name": "haps",
          "description": "a list of the microhaplotypes detected for this target",
          "range": "MicrohaplotypeForTarget",
          "required": true,
          "multivalued": true,
          "inlined_as_list": true,
          "@type": "SlotDefinition"
        }
      ],
      "class_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/MicrohaplotypesForTarget",
      "@type": "ClassDefinition"
    },
    {
      "name": "BioinformaticsMethodInfo",
      "definition_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/BioinformaticsMethodInfo",
      "description": "the targeted amplicon bioinformatics pipeline",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slots": [
        "bioinformaticsMethodInfo__demultiplexing_method",
        "bioinformaticsMethodInfo__denoising_method",
        "bioinformaticsMethodInfo__additional_methods",
        "bioinformaticsMethodInfo__bioinformatics_method_name"
      ],
      "slot_usage": {},
      "attributes": [
        {
          "name": "demultiplexing_method",
          "description": "the demultiplexing method used to separate raw reads from barcodes and primer targets",
          "range": "BioMethod",
          "required": true,
          "@type": "SlotDefinition"
        },
        {
          "name": "denoising_method",
          "description": "the method used to de-noise and/or cluster the raw reads",
          "range": "BioMethod",
          "required": true,
          "@type": "SlotDefinition"
        },
        {
          "name": "additional_methods",
          "description": "any additional methods used to analyze the data",
          "range": "BioMethod",
          "multivalued": true,
          "inlined_as_list": true,
          "@type": "SlotDefinition"
        },
        {
          "name": "bioinformatics_method_name",
          "description": "name of the collection of methods is called, e.g. pipeline ",
          "range": "string",
          "pattern": "^[A-z-._0-9 ]+$",
          "@type": "SlotDefinition"
        }
      ],
      "class_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/BioinformaticsMethodInfo",
      "@type": "ClassDefinition"
    },
    {
      "name": "BioMethod",
      "definition_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/BioMethod",
      "description": "methodology description of a portion of a bioinformatics pipeline",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slots": [
        "program_version",
        "bioMethod__program",
        "bioMethod__program_description",
        "bioMethod__additional_argument"
      ],
      "slot_usage": {},
      "attributes": [
        {
          "name": "program",
          "description": "name of the program used for this portion of the pipeline",
          "range": "string",
          "required": true,
          "pattern": "^[A-z-._0-9 ]+$",
          "@type": "SlotDefinition"
        },
        {
          "name": "program_description",
          "description": "a short description of what this method does",
          "range": "string",
          "pattern": "^[A-z-._0-9\\(\\),\\/\\ ]+$",
          "@type": "SlotDefinition"
        },
        {
          "name": "additional_argument",
          "description": "any additional arguments that differ from the default",
          "range": "string",
          "multivalued": true,
          "inlined_as_list": true,
          "pattern": "^[A-z-._0-9\\(\\),\\/\\ ]+$",
          "@type": "SlotDefinition"
        }
      ],
      "class_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/BioMethod",
      "@type": "ClassDefinition"
    },
    {
      "name": "ExperimentInfo",
      "definition_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/ExperimentInfo",
      "description": "Information about a specific amplification and sequencing of a specimen",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slots": [
        "sequencing_info_id",
        "ExperimentInfo_plate_name",
        "ExperimentInfo_plate_row",
        "ExperimentInfo_plate_col",
        "ExperimentInfo_specimen_id",
        "panel_id",
        "experimentInfo__accession",
        "experimentInfo__experiment_sample_name"
      ],
      "slot_usage": {},
      "attributes": [
        {
          "name": "accession",
          "description": "ERA/SRA accession number for the sample if it was submitted",
          "range": "string",
          "pattern": "^[A-z-._0-9]+$",
          "@type": "SlotDefinition"
        },
        {
          "name": "experiment_sample_name",
          "description": "a unique identifier for this sequence/amplification run on a specimen_name",
          "identifier": true,
          "range": "string",
          "required": true,
          "pattern": "^[A-z-._0-9 ]+$",
          "@type": "SlotDefinition"
        }
      ],
      "class_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/ExperimentInfo",
      "@type": "ClassDefinition"
    },
    {
      "name": "SequencingInfo",
      "definition_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/SequencingInfo",
      "description": "Information on sequencing info",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slots": [
        "sequencingInfo__sequencing_info_name",
        "sequencingInfo__seq_instrument",
        "sequencingInfo__seq_date",
        "sequencingInfo__nucl_acid_ext",
        "sequencingInfo__nucl_acid_amp",
        "sequencingInfo__nucl_acid_ext_date",
        "sequencingInfo__nucl_acid_amp_date",
        "sequencingInfo__pcr_cond",
        "sequencingInfo__lib_screen",
        "sequencingInfo__lib_layout",
        "sequencingInfo__lib_kit",
        "sequencingInfo__seq_center"
      ],
      "slot_usage": {},
      "attributes": [
        {
          "name": "sequencing_info_name",
          "description": "a name of for the sequencing done, e.g. batch1",
          "range": "string",
          "required": true,
          "pattern": "^[A-z-._0-9 ]+$",
          "@type": "SlotDefinition"
        },
        {
          "name": "seq_instrument",
          "description": "the sequencing instrument used to sequence the run, e.g. ILLUMINA, Illumina MiSeq",
          "examples": [
            {
              "value": "ILLUMINA",
              "@type": "Example"
            },
            {
              "value": "Illumina MiSeq",
              "@type": "Example"
            }
          ],
          "range": "string",
          "required": true,
          "pattern": "^[A-z-._0-9 ]+$",
          "@type": "SlotDefinition"
        },
        {
          "name": "seq_date",
          "description": "the date of sequencing, should be YYYY-MM or YYYY-MM-DD",
          "examples": [
            {
              "value": "2024-03-10",
              "@type": "Example"
            },
            {
              "value": "2024-03",
              "@type": "Example"
            }
          ],
          "range": "string",
          "required": true,
          "pattern": "\\d{4}-(?:0[1-9]|1[0-2])(?:-(?:0[1-9]|[12][0-9]|3[01]))?",
          "@type": "SlotDefinition"
        },
        {
          "name": "nucl_acid_ext",
          "description": "Link to a reference or kit that describes the recovery of nucleic acids from the sample",
          "examples": [
            {
              "value": "https://www.paragongenomics.com/targeted-sequencing/amplicon-sequencing/cleanplex-ngs-amplicon-sequencing/",
              "@type": "Example"
            }
          ],
          "range": "string",
          "pattern": "^(https?|ftp):\\/\\/[^\\s/$.?#].[^\\s]*$",
          "@type": "SlotDefinition"
        },
        {
          "name": "nucl_acid_amp",
          "description": "Link to a reference or kit that describes the enzymatic amplification of nucleic acids",
          "examples": [
            {
              "value": "https://www.paragongenomics.com/targeted-sequencing/amplicon-sequencing/cleanplex-ngs-amplicon-sequencing/",
              "@type": "Example"
            }
          ],
          "range": "string",
          "pattern": "^(https?|ftp):\\/\\/[^\\s/$.?#].[^\\s]*$",
          "@type": "SlotDefinition"
        },
        {
          "name": "nucl_acid_ext_date",
          "description": "the date of the nucleoacid extraction",
          "examples": [
            {
              "value": "2024-03-10",
              "@type": "Example"
            },
            {
              "value": "2024-03",
              "@type": "Example"
            }
          ],
          "range": "string",
          "pattern": "\\d{4}-(?:0[1-9]|1[0-2])(?:-(?:0[1-9]|[12][0-9]|3[01]))?",
          "@type": "SlotDefinition"
        },
        {
          "name": "nucl_acid_amp_date",
          "description": "the date of the nucleoacid amplification",
          "examples": [
            {
              "value": "2024-03-10",
              "@type": "Example"
            },
            {
              "value": "2024-03",
              "@type": "Example"
            }
          ],
          "range": "string",
          "pattern": "\\d{4}-(?:0[1-9]|1[0-2])(?:-(?:0[1-9]|[12][0-9]|3[01]))?",
          "@type": "SlotDefinition"
        },
        {
          "name": "pcr_cond",
          "description": "the method/conditions for PCR, List PCR cycles used to amplify the target",
          "range": "string",
          "pattern": "^[A-z-._0-9\\(\\),\\/\\ ]+$",
          "@type": "SlotDefinition"
        },
        {
          "name": "lib_screen",
          "description": "Describe enrichment, screening, or normalization methods applied during amplification or library preparation, e.g. size selection 390bp, diluted to 1 ng DNA/sample",
          "examples": [
            {
              "value": "size selection 390bp, diluted to 1 ng DNA/sample",
              "@type": "Example"
            }
          ],
          "range": "string",
          "pattern": "^[A-z-._0-9\\(\\),\\/\\ ]+$",
          "@type": "SlotDefinition"
        },
        {
          "name": "lib_layout",
          "description": "Specify the configuration of reads, e.g. paired-end",
          "examples": [
            {
              "value": "paired-end",
              "@type": "Example"
            }
          ],
          "range": "string",
          "pattern": "^[A-z-._0-9 ]+$",
          "@type": "SlotDefinition"
        },
        {
          "name": "lib_kit",
          "description": "Name, version, and applicable cell or cycle numbers for the kit used to prepare libraries and load cells or chips for sequencing. If possible, include a part number, e.g. MiSeq Reagent Kit v3 (150-cycle), MS-102-3001",
          "examples": [
            {
              "value": "MiSeq Reagent Kit v3 (150-cycle), MS-102-3001",
              "@type": "Example"
            }
          ],
          "range": "string",
          "pattern": "^[A-z-._0-9\\(\\),\\/\\ ]+$",
          "@type": "SlotDefinition"
        },
        {
          "name": "seq_center",
          "description": "Name of facility where sequencing was performed (lab, core facility, or company)",
          "examples": [
            {
              "value": "UCSF sequencing core",
              "@type": "Example"
            }
          ],
          "range": "string",
          "pattern": "^[A-z-._0-9\\(\\),\\/\\ ]+$",
          "@type": "SlotDefinition"
        }
      ],
      "class_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/SequencingInfo",
      "@type": "ClassDefinition"
    },
    {
      "name": "ParasiteDensity",
      "definition_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/ParasiteDensity",
      "description": "method and value of determined parasite density",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slots": [
        "parasiteDensity__method",
        "parasiteDensity__density"
      ],
      "slot_usage": {},
      "attributes": [
        {
          "name": "method",
          "description": "the method of how this density was obtained",
          "examples": [
            {
              "value": "qpcr",
              "@type": "Example"
            },
            {
              "value": "microscopy",
              "@type": "Example"
            }
          ],
          "range": "string",
          "required": true,
          "pattern": "^[A-z-._0-9 ]+$",
          "@type": "SlotDefinition"
        },
        {
          "name": "density",
          "description": "the density in microliters",
          "examples": [
            {
              "value": "25.0",
              "@type": "Example"
            },
            {
              "value": "10e5",
              "@type": "Example"
            }
          ],
          "range": "double",
          "required": true,
          "minimum_value": 0,
          "pattern": "^[-+]?\\\\d*\\\\.?\\\\d+(?:[eE][-+]?\\\\d+)?$",
          "@type": "SlotDefinition"
        }
      ],
      "class_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/ParasiteDensity",
      "@type": "ClassDefinition"
    },
    {
      "name": "SpecimenInfo",
      "definition_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/SpecimenInfo",
      "description": "Information on specimen info",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slots": [
        "plate_name",
        "plate_row",
        "plate_col",
        "specimenInfo__specimen_name",
        "specimenInfo__samp_taxon_id",
        "specimenInfo__individual_id",
        "specimenInfo__host_taxon_id",
        "specimenInfo__alternate_identifiers",
        "specimenInfo__host_sex",
        "specimenInfo__parasite_density_info",
        "specimenInfo__collection_date",
        "specimenInfo__host_date_of_birth",
        "specimenInfo__collection_country",
        "specimenInfo__geo_admin1",
        "specimenInfo__geo_admin2",
        "specimenInfo__geo_admin3",
        "specimenInfo__lat_lon",
        "specimenInfo__collector",
        "specimenInfo__samp_store_loc",
        "specimenInfo__samp_collect_device",
        "specimenInfo__project_name",
        "specimenInfo__sample_comments"
      ],
      "slot_usage": {},
      "attributes": [
        {
          "name": "specimen_name",
          "description": "an identifier for the specimen",
          "identifier": true,
          "range": "string",
          "required": true,
          "pattern": "^[A-z-._0-9 ]+$",
          "@type": "SlotDefinition"
        },
        {
          "name": "samp_taxon_id",
          "description": "the NCBI taxonomy number of the organism of interest",
          "range": "integer",
          "required": true,
          "pattern": "^[0-9]+$",
          "@type": "SlotDefinition"
        },
        {
          "name": "individual_id",
          "description": "an identifier for the individual a specimen was collected from",
          "range": "integer",
          "pattern": "^[0-9]+$",
          "@type": "SlotDefinition"
        },
        {
          "name": "host_taxon_id",
          "description": "optional the NCBI taxonomy number of the host of the organism",
          "range": "integer",
          "pattern": "^[0-9]+$",
          "@type": "SlotDefinition"
        },
        {
          "name": "alternate_identifiers",
          "description": "a list of optional alternative names for the samples",
          "range": "string",
          "multivalued": true,
          "inlined_as_list": true,
          "pattern": "^[A-z-._0-9 ]+$",
          "@type": "SlotDefinition"
        },
        {
          "name": "host_sex",
          "description": "if specimen is from a person, the sex listed for that person",
          "range": "string",
          "pattern": "^[A-z-._0-9 ]+$",
          "@type": "SlotDefinition"
        },
        {
          "name": "parasite_density_info",
          "description": "one or more parasite densities in microliters for this specimen",
          "range": "ParasiteDensity",
          "multivalued": true,
          "inlined_as_list": true,
          "@type": "SlotDefinition"
        },
        {
          "name": "collection_date",
          "description": "the date of the sample collection, can be YYYY, YYYY-MM, or YYYY-MM-DD",
          "examples": [
            {
              "value": "1988",
              "@type": "Example"
            },
            {
              "value": "1988-06",
              "@type": "Example"
            },
            {
              "value": "1988-06-26",
              "@type": "Example"
            }
          ],
          "range": "string",
          "required": true,
          "pattern": "\\d{4}-(?:0[1-9]|1[0-2])(?:-(?:0[1-9]|[12][0-9]|3[01]))?|NA",
          "@type": "SlotDefinition"
        },
        {
          "name": "host_date_of_birth",
          "description": "if specimen is from a person, the date of birth of that person, can be YYYY, YYYY-MM, or YYYY-MM-DD",
          "examples": [
            {
              "value": "1988",
              "@type": "Example"
            },
            {
              "value": "1988-06",
              "@type": "Example"
            },
            {
              "value": "1988-06-26",
              "@type": "Example"
            }
          ],
          "range": "string",
          "pattern": "\\d{4}-(?:0[1-9]|1[0-2])(?:-(?:0[1-9]|[12][0-9]|3[01]))?|NA",
          "@type": "SlotDefinition"
        },
        {
          "name": "collection_country",
          "description": "the name of country collected in, would be the same as admin level 0",
          "examples": [
            {
              "value": "Senegal",
              "@type": "Example"
            },
            {
              "value": "USA",
              "@type": "Example"
            },
            {
              "value": "Japan",
              "@type": "Example"
            }
          ],
          "range": "string",
          "required": true,
          "pattern": "^[A-z-._0-9 ]+$",
          "@type": "SlotDefinition"
        },
        {
          "name": "geo_admin1",
          "description": "geographical admin level 1, the secondary large demarcation of a nation (nation = admin level 0)",
          "examples": [
            {
              "value": "State/Province",
              "@type": "Example"
            }
          ],
          "range": "string",
          "pattern": "^[A-z-._0-9 ]+$",
          "@type": "SlotDefinition"
        },
        {
          "name": "geo_admin2",
          "description": "geographical admin level 2, the third large demarcation of a nation (nation = admin level 0)",
          "examples": [
            {
              "value": "city",
              "@type": "Example"
            }
          ],
          "range": "string",
          "pattern": "^[A-z-._0-9 ]+$",
          "@type": "SlotDefinition"
        },
        {
          "name": "geo_admin3",
          "description": "geographical admin level 3, the third large demarcation of a nation (nation = admin level 0)",
          "examples": [
            {
              "value": "district of a city",
              "@type": "Example"
            }
          ],
          "range": "string",
          "pattern": "^[A-z-._0-9 ]+$",
          "@type": "SlotDefinition"
        },
        {
          "name": "lat_lon",
          "description": "the latitude and longitude of the collection site of the specimen",
          "range": "string",
          "pattern": "^[-+]?\\d{1,2}(?:\\.\\d+)?,[-+]?\\d{1,3}(?:\\.\\d+)?$",
          "@type": "SlotDefinition"
        },
        {
          "name": "collector",
          "description": "the name of the primary person managing the specimen",
          "range": "string",
          "required": true,
          "pattern": "^[A-z-._0-9\\(\\),\\/\\ ]+$",
          "@type": "SlotDefinition"
        },
        {
          "name": "samp_store_loc",
          "description": "the sample store site, address or facility name",
          "range": "string",
          "required": true,
          "pattern": "^[A-z-._0-9\\(\\),\\/\\ ]+$",
          "@type": "SlotDefinition"
        },
        {
          "name": "samp_collect_device",
          "description": "the way the sample was collected, e.g. whole blood, dried blood spot, etc",
          "range": "string",
          "required": true,
          "pattern": "^[A-z-._0-9\\(\\),\\/\\ ]+$",
          "@type": "SlotDefinition"
        },
        {
          "name": "project_name",
          "description": "a name of the project under which the sample is organized",
          "range": "string",
          "required": true,
          "pattern": "^[A-z-._0-9\\(\\),\\/\\ ]+$",
          "@type": "SlotDefinition"
        },
        {
          "name": "sample_comments",
          "description": "any additional comments about the sample",
          "range": "string",
          "pattern": "^[A-z-._0-9\\(\\),\\/\\ ]+$",
          "@type": "SlotDefinition"
        }
      ],
      "class_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/SpecimenInfo",
      "@type": "ClassDefinition"
    },
    {
      "name": "BioinformaticsRunInfo",
      "definition_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/BioinformaticsRunInfo",
      "description": "Information about the pipeline run that generated some of the microhaplotype detected and reads_by_stage",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slots": [
        "bioinformatics_methods_id",
        "bioinformaticsRunInfo__run_date",
        "bioinformaticsRunInfo__bioinformatics_run_name"
      ],
      "slot_usage": {},
      "attributes": [
        {
          "name": "run_date",
          "description": "the date when the run was done, should be YYYY-MM-DD",
          "range": "string",
          "required": true,
          "pattern": "\\d{4}-(?:0[1-9]|1[0-2])(?:-(?:0[1-9]|[12][0-9]|3[01]))?",
          "@type": "SlotDefinition"
        },
        {
          "name": "bioinformatics_run_name",
          "description": "a name to for this run",
          "range": "string",
          "pattern": "^[A-z-._0-9 ]+$",
          "@type": "SlotDefinition"
        }
      ],
      "class_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/BioinformaticsRunInfo",
      "@type": "ClassDefinition"
    },
    {
      "name": "PmoGenerationMethod",
      "definition_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/PmoGenerationMethod",
      "description": "Information about how a PMO was generated",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slots": [
        "program_version",
        "pmoGenerationMethod__program_name"
      ],
      "slot_usage": {},
      "attributes": [
        {
          "name": "program_name",
          "description": "the name of the program",
          "range": "string",
          "required": true,
          "pattern": "^[A-z-._0-9 ]+$",
          "@type": "SlotDefinition"
        }
      ],
      "class_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/PmoGenerationMethod",
      "@type": "ClassDefinition"
    },
    {
      "name": "PmoHeader",
      "definition_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/PmoHeader",
      "description": "Information on the PMO file",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slots": [
        "pmoHeader__pmo_version",
        "pmoHeader__creation_date",
        "pmoHeader__generation_method"
      ],
      "slot_usage": {},
      "attributes": [
        {
          "name": "pmo_version",
          "description": "the version of the PMO file, should be in the format of v[MAJOR].[MINOR].[PATCH]",
          "range": "string",
          "required": true,
          "pattern": "^[A-z-._0-9 ]+$",
          "@type": "SlotDefinition"
        },
        {
          "name": "creation_date",
          "description": "the date of when the PMO file was created or modified, should be YYYY-MM-DD",
          "range": "string",
          "pattern": "\\d{4}-(?:0[1-9]|1[0-2])(?:-(?:0[1-9]|[12][0-9]|3[01]))?",
          "@type": "SlotDefinition"
        },
        {
          "name": "generation_method",
          "description": "the generation method to create this PMO ",
          "range": "PmoGenerationMethod",
          "@type": "SlotDefinition"
        }
      ],
      "class_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/PmoHeader",
      "@type": "ClassDefinition"
    },
    {
      "name": "StageReadCounts",
      "definition_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/StageReadCounts",
      "description": "Information on the reads counts at several stages",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slots": [
        "stageReadCounts__read_count",
        "stageReadCounts__stage"
      ],
      "slot_usage": {},
      "attributes": [
        {
          "name": "read_count",
          "description": "the read counts",
          "range": "integer",
          "required": true,
          "pattern": "^[0-9]+$",
          "@type": "SlotDefinition"
        },
        {
          "name": "stage",
          "description": "the stage of the pipeline, e.g. demultiplexed, denoised, etc",
          "range": "string",
          "required": true,
          "pattern": "^[A-z-._0-9 ]+$",
          "@type": "SlotDefinition"
        }
      ],
      "class_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/StageReadCounts",
      "@type": "ClassDefinition"
    },
    {
      "name": "ReadCountsByStageForTarget",
      "definition_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/ReadCountsByStageForTarget",
      "description": "Information on the reads counts at several stages of a pipeline for a target",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slots": [
        "target_id",
        "readCountsByStageForTarget__stages"
      ],
      "slot_usage": {},
      "attributes": [
        {
          "name": "stages",
          "description": "the read counts by each stage",
          "range": "StageReadCounts",
          "required": true,
          "multivalued": true,
          "inlined_as_list": true,
          "@type": "SlotDefinition"
        }
      ],
      "class_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/ReadCountsByStageForTarget",
      "@type": "ClassDefinition"
    },
    {
      "name": "ReadCountsByStageForExperimentalSample",
      "definition_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/ReadCountsByStageForExperimentalSample",
      "description": "Information on the reads counts at several stages of a pipeline for a experimental_sample",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slots": [
        "experiment_sample_id",
        "readCountsByStageForExperimentalSample__total_raw_count",
        "readCountsByStageForExperimentalSample__read_counts_for_targets"
      ],
      "slot_usage": {},
      "attributes": [
        {
          "name": "total_raw_count",
          "description": "the raw counts off the sequencing machine that a sample began with",
          "range": "integer",
          "required": true,
          "pattern": "^[0-9]+$",
          "@type": "SlotDefinition"
        },
        {
          "name": "read_counts_for_targets",
          "description": "a list of counts by stage for a target",
          "range": "ReadCountsByStageForTarget",
          "multivalued": true,
          "inlined_as_list": true,
          "@type": "SlotDefinition"
        }
      ],
      "class_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/ReadCountsByStageForExperimentalSample",
      "@type": "ClassDefinition"
    },
    {
      "name": "ReadCountsByStage",
      "definition_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/ReadCountsByStage",
      "description": "Information on the reads counts at several stages of a pipeline",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slots": [
        "bioinformatics_run_id",
        "readCountsByStage__read_counts_by_experimental_sample_by_stage"
      ],
      "slot_usage": {},
      "attributes": [
        {
          "name": "read_counts_by_experimental_sample_by_stage",
          "description": "a list by experiment_sample for the counts at each stage",
          "range": "ReadCountsByStageForExperimentalSample",
          "required": true,
          "multivalued": true,
          "inlined_as_list": true,
          "@type": "SlotDefinition"
        }
      ],
      "class_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/ReadCountsByStage",
      "@type": "ClassDefinition"
    },
    {
      "name": "PortableMicrohaplotypeObject",
      "definition_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/PortableMicrohaplotypeObject",
      "description": "Information on final results from a targeted amplicon analysis",
      "from_schema": "https://plasmogenepi.github.io/portable-microhaplotype-object",
      "slots": [
        "portableMicrohaplotypeObject__experiment_info",
        "portableMicrohaplotypeObject__specimen_info",
        "portableMicrohaplotypeObject__sequencing_info",
        "portableMicrohaplotypeObject__panel_info",
        "portableMicrohaplotypeObject__target_info",
        "portableMicrohaplotypeObject__targeted_genomes",
        "portableMicrohaplotypeObject__microhaplotypes_info",
        "portableMicrohaplotypeObject__bioinformatics_methods_info",
        "portableMicrohaplotypeObject__bioinformatics_run_info",
        "portableMicrohaplotypeObject__microhaplotypes_detected",
        "portableMicrohaplotypeObject__pmo_header",
        "portableMicrohaplotypeObject__read_counts_by_stage"
      ],
      "slot_usage": {},
      "attributes": [
        {
          "name": "experiment_info",
          "description": "a list of experiments of all the seq/amp of the specimens within this project",
          "range": "ExperimentInfo",
          "required": true,
          "multivalued": true,
          "inlined_as_list": true,
          "@type": "SlotDefinition"
        },
        {
          "name": "specimen_info",
          "description": "a list of specimens of all the samples within this project",
          "range": "SpecimenInfo",
          "required": true,
          "multivalued": true,
          "inlined_as_list": true,
          "@type": "SlotDefinition"
        },
        {
          "name": "sequencing_info",
          "description": "a list of sequencing info for this project",
          "range": "SequencingInfo",
          "required": true,
          "multivalued": true,
          "inlined_as_list": true,
          "@type": "SlotDefinition"
        },
        {
          "name": "panel_info",
          "description": "a list of info on the panels",
          "range": "PanelInfo",
          "required": true,
          "multivalued": true,
          "inlined_as_list": true,
          "@type": "SlotDefinition"
        },
        {
          "name": "target_info",
          "description": "a list of info on the targets",
          "range": "TargetInfo",
          "required": true,
          "multivalued": true,
          "inlined_as_list": true,
          "@type": "SlotDefinition"
        },
        {
          "name": "targeted_genomes",
          "description": "a list of genomes that the targets in TargetInfo refer to",
          "range": "GenomeInfo",
          "required": true,
          "multivalued": true,
          "inlined_as_list": true,
          "@type": "SlotDefinition"
        },
        {
          "name": "microhaplotypes_info",
          "description": "a list of the information on the representative microhaplotypes",
          "range": "RepresentativeMicrohaplotypes",
          "required": true,
          "@type": "SlotDefinition"
        },
        {
          "name": "bioinformatics_methods_info",
          "description": "the bioinformatics pipeline/methods used to generated the amplicon analysis for this project",
          "range": "BioinformaticsMethodInfo",
          "required": true,
          "multivalued": true,
          "inlined_as_list": true,
          "@type": "SlotDefinition"
        },
        {
          "name": "bioinformatics_run_info",
          "description": "the runtime info for the bioinformatics pipeline used to generated the amplicon analysis for this project",
          "range": "BioinformaticsRunInfo",
          "required": true,
          "multivalued": true,
          "inlined_as_list": true,
          "@type": "SlotDefinition"
        },
        {
          "name": "microhaplotypes_detected",
          "description": "the microhaplotypes detected in this projects",
          "range": "MicrohaplotypesDetected",
          "required": true,
          "multivalued": true,
          "inlined_as_list": true,
          "@type": "SlotDefinition"
        },
        {
          "name": "pmo_header",
          "description": "the PMO information for this file including version etc",
          "range": "PmoHeader",
          "required": true,
          "@type": "SlotDefinition"
        },
        {
          "name": "read_counts_by_stage",
          "description": "the read counts for different stages of the pipeline",
          "range": "ReadCountsByStage",
          "multivalued": true,
          "inlined_as_list": true,
          "@type": "SlotDefinition"
        }
      ],
      "class_uri": "https://plasmogenepi.github.io/portable-microhaplotype-object/PortableMicrohaplotypeObject",
      "tree_root": true,
      "@type": "ClassDefinition"
    }
  ],
  "metamodel_version": "1.7.0",
  "source_file": "portable_microhaplotype_object.yaml",
  "source_file_date": "2025-03-21T20:46:40",
  "source_file_size": 33137,
  "generation_date": "2025-03-21T20:48:20",
  "@type": "SchemaDefinition",
  "@context": [
    "project/jsonld/portable_microhaplotype_object.context.jsonld",
    "https://w3id.org/linkml/types.context.jsonld",
    {
      "@base": "https://plasmogenepi.github.io/portable-microhaplotype-object/"
    }
  ]
}
